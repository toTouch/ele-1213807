<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiliulou.electricity.mapper.RentCarOrderMapper">

    <resultMap type="com.xiliulou.electricity.entity.RentCarOrder" id="RentCarOrderMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="uid" column="uid" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="idNumber" column="id_number" jdbcType="VARCHAR"/>
        <result property="carStoreId" column="car_store_id" jdbcType="INTEGER"/>
        <result property="carStoreName" column="car_store_name" jdbcType="VARCHAR"/>
        <result property="carSn" column="car_sn" jdbcType="VARCHAR"/>
        <result property="numberPlate" column="number_plate" jdbcType="VARCHAR"/>
        <result property="carDeposit" column="car_deposit" jdbcType="NUMERIC"/>
        <result property="status" column="status" jdbcType="OTHER"/>
        <result property="createTime" column="create_time" jdbcType="INTEGER"/>
    </resultMap>


    <!--查询指定行数据-->
    <select id="queryList" resultMap="RentCarOrderMap">
        select
          id, uid, name, phone, id_number, car_store_id, car_store_name, car_sn, number_plate, car_deposit, status, create_time
        from electricity.t_rent_car_order
        <where>
            <if test="query.name != null and query.name != ''">
                and name = #{query.name}
            </if>
            <if test="query.phone != null and query.phone != ''">
                and phone = #{query.phone}
            </if>
            <if test="query.carStoreId != null">
                and car_store_id = #{query.carStoreId}
            </if>
            <if test="query.status != null">
                and status = #{query.status}
            </if>
            <if test="query.beginTime != null">
                and create_time &gt;=#{query.beginTime}
            </if>
            <if test="query.endTime != null">
                and create_time &lt;=#{query.endTime}
            </if>
            <if test="query.status != null">
                and status = #{query.status}
            </if>
        </where>
        order by create_time desc
        limit #{query.offset}, #{query.size}
    </select>

</mapper>