<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiliulou.electricity.mapper.UserCarMemberCardMapper">
    
    <resultMap type="com.xiliulou.electricity.entity.UserCarMemberCard" id="UserCarMemberCardMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="uid" column="uid" jdbcType="INTEGER"/>
        <result property="cardId" column="card_id" jdbcType="INTEGER"/>
        <result property="orderId" column="order_id" jdbcType="VARCHAR"/>
        <result property="memberCardExpireTime" column="member_card_expire_time" jdbcType="INTEGER"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
        <result property="tenantId" column="tenant_id" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 基础字段 -->
    <sql id="selectUserCarMemberCard">
       	select   id, uid, card_id,order_id, member_card_expire_time, del_flag, create_time, update_time        from t_user_car_member_card
    </sql>

    <!--查询单个-->
    <select id="selectByUid" resultMap="UserCarMemberCardMap">
        <include refid="selectUserCarMemberCard"/>
        where uid = #{uid}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="selectByQuery" resultMap="UserCarMemberCardMap">
        <include refid="selectUserCarMemberCard"/>
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="uid != null">
                and uid = #{uid}
            </if>
            <if test="cardId != null">
                and card_id = #{cardId}
            </if>
            <if test="orderId != null and orderId != ''">
                and order_id = #{orderId}
            </if>
            <if test="memberCardExpireTime != null">
                and member_card_expire_time = #{memberCardExpireTime}
            </if>
            <if test="delFlag != null">
                and del_flag = #{delFlag}
            </if>
            <if test="tenantId != null">
                and tenant_id = #{tenantId}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>

    <select id="carMemberCardExpire" resultType="com.xiliulou.electricity.query.CarMemberCardExpiringSoonQuery">
        SELECT
	    tucmc.id,
	    tucmc.member_card_expire_time as rentCarMemberCardExpireTime,
	    cmco.card_name as cardName,
	    ui.uid,
	    ui.tenant_id,
	    uob.third_id
        FROM
	    t_user_car_member_card tucmc
	    LEFT JOIN t_car_member_card_order cmco on cmco.order_id = tucmc.order_id
	    LEFT JOIN t_user_info ui ON tucmc.uid = ui.uid
	    LEFT JOIN t_user_oauth_bind uob ON uob.uid = ui.uid
        WHERE
	    ui.del_flag = 0
	    AND tucmc.member_card_expire_time &gt; #{firstTime}
        AND tucmc.member_card_expire_time &lt;= #{lastTime}
        LIMIT #{offset}, #{size}
    </select>


    <!--新增所有列-->
    <insert id="insertOne" keyProperty="id" useGeneratedKeys="true">
        insert into t_user_car_member_card(uid, card_id,order_id, member_card_expire_time, del_flag, create_time, update_time)
        values (#{uid}, #{cardId},#{orderId}, #{memberCardExpireTime}, #{delFlag}, #{createTime}, #{updateTime})
    </insert>

    <insert id="insertOrUpdate" keyProperty="id" useGeneratedKeys="true">
        insert into t_user_car_member_card(uid, card_id,order_id, member_card_expire_time, del_flag, create_time, update_time)
        values (#{uid}, #{cardId},#{orderId}, #{memberCardExpireTime}, #{delFlag}, #{createTime}, #{updateTime})
        on duplicate key
        update card_id=#{cardId},order_id=#{orderId}, member_card_expire_time=#{memberCardExpireTime}, del_flag=#{delFlag}, update_time=#{updateTime}
    </insert>

    <!--通过主键修改数据-->
    <update id="updateByUid">
        update t_user_car_member_card
        <set>
            <if test="uid != null">
                uid = #{uid},
            </if>
            <if test="cardId != null">
                card_id = #{cardId},
            </if>
            <if test="orderId != null and orderId != ''">
                order_id = #{orderId},
            </if>
            <if test="memberCardExpireTime != null">
                member_card_expire_time = #{memberCardExpireTime},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
            <if test="tenantId != null">
                tenant_id = #{tenantId},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where uid = #{uid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteByUid">
        delete from t_user_car_member_card where uid = #{uid}
    </delete>

    <select id="queryMemberCardExpireUser" resultType="com.xiliulou.electricity.vo.FailureMemberCardVo">
        select
        member_card_expire_time ,
        uid,
        order_id
         from t_user_car_member_card
        where member_card_expire_time &lt;= #{nowTime}
        limit #{offset},#{size}
    </select>
    
    <select id="selectCarMemberCardExpire" resultType="com.xiliulou.electricity.query.CarMemberCardExpiringSoonQuery">
        select ucmc.member_card_expire_time as rentCarMemberCardExpireTime, ucmc.uid, ucmc.order_id as rentCarOrderId,tui.tenant_id
              from t_user_car_member_card  ucmc
              left join t_user_info tui on tui.uid = ucmc.uid
              left join t_user_oauth_bind uob on uob.uid = ucmc.uid
              where tui.del_flag = 0
              and ucmc.member_card_expire_time &gt; #{firstTime}
              and ucmc.member_card_expire_time &lt;= #{lastTime}
              limit #{offset}, #{size}
    </select>
    
    <select id="carMemberCardExpireBreakPower"
        resultType="com.xiliulou.electricity.query.CarMemberCardExpireBreakPowerQuery">
        select uc.sn, ui.tenant_id, ui.uid, ui.name, ui.phone
        from t_user_info ui
         inner join  t_user_car_member_card ucmc on ui.uid = ucmc.uid
         inner join  t_user_car uc on ucmc.uid = uc.uid
         where uc.sn is not null
          and ui.del_flag = 0 and ucmc.member_card_expire_time &lt; #{now}
         limit #{offset}, #{size}
    </select>

</mapper>
