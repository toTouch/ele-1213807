<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiliulou.electricity.mapper.ElectricityBatteryMapper">



	<!--电池分页-->
	<select id="queryList" resultType="com.xiliulou.electricity.entity.ElectricityBattery">
		select b.id, b.sn,b.power, b.voltage, b.capacity, b.status, b.create_time, b.update_time, b.del_flag, b.tenant_id, b.electricity_cabinet_id,
		b.uid,b.model,b.charge_status
		from t_electricity_battery b
		where b.del_flag = 0 and b.tenant_id = #{query.tenantId}
		<if test="query.sn != null and query.sn !=''">
			and b.sn like concat('%',#{query.sn,jdbcType=VARCHAR},'%')
		</if>
		<if test="query.status != null">
			and b.status =#{query.status}
		</if>
		<if test="query.chargeStatus != null">
			and b.charge_status =#{query.chargeStatus}
		</if>
		<if test="query.tenantId != null">
			and b.tenant_id = #{query.tenantId}
		</if>
		<if test="query.electricityCabinetName != null">
 			and b.electricity_cabinet_name like  concat('%',#{query.electricityCabinetName},'%') and status = 0
 		</if>
		<if test="query.electricityBatteryIdList!=null and query.electricityBatteryIdList!=''">
			and b.id in
			<foreach collection="query.electricityBatteryIdList" item="id" index="index" open="(" close=")"
					 separator=",">
				#{id}
			</foreach>
		</if>
		<if test="query.franchiseeName != null">
			and b.id in (select b.electricity_battery_id from t_franchisee_bind_electricity_battery b left join t_franchisee f on b.franchisee_id = f.id where f.name like concat('%',#{query.franchiseeName},'%')))
		</if>
		order by create_time desc
		limit #{offset}, #{size}
	</select>

	<!--电池分页-->
	<select id="queryNotBindList" resultType="com.xiliulou.electricity.entity.ElectricityBattery">
		select b.id, b.sn,b.power, b.voltage, b.capacity, b.status, b.create_time, b.update_time, b.del_flag, b.tenant_id, b.electricity_cabinet_id,
		b.uid,b.model,b.charge_status
		from t_electricity_battery b
		where b.del_flag = 0 and b.tenant_id = #{tenantId}
		and id not in(
		     select electricity_battery_id from t_franchisee_bind_electricity_battery fbeb where 1=1
		     <if test="franchiseeId != null">
				 fbeb.franchisee_id != #{franchiseeId}
             </if>
		     )
		order by create_time desc
		limit #{offset}, #{size}
	</select>

	<select id="queryCount" resultType="java.lang.Integer">
		select COUNT(1)
		from t_electricity_battery b
		where b.del_flag = 0 and b.tenant_id = #{query.tenantId}

		<if test="query.sn != null and query.sn !=''">
			and b.sn like concat('%',#{query.sn,jdbcType=VARCHAR},'%')
		</if>
		<if test="query.status != null">
			and b.status =#{query.status}
		</if>
		<if test="query.chargeStatus != null">
			and b.charge_status =#{query.chargeStatus}
		</if>
		<if test="query.tenantId != null">
			and b.tenant_id = #{query.tenantId}
		</if>
		<if test="query.electricityCabinetName != null">
			and b.electricity_cabinet_name =  #{query.electricityCabinetName} and status = 0
		</if>
		<if test="query.electricityBatteryIdList!=null and query.electricityBatteryIdList!=''">
			and b.id in
			<foreach collection="query.electricityBatteryIdList" item="id" index="index" open="(" close=")"
					 separator=",">
				#{id}
			</foreach>
		</if>
		<if test="query.franchiseeName != null">
			and b.id in (select electricity_battery_id from t_franchisee_bind_electricity_battery where franchisee_id in (select id from t_franchisee where name = #{query.franchiseeName}))
		</if>
	</select>



	<select id="selectBatteryInfo" resultType="com.xiliulou.electricity.entity.ElectricityBattery">
        select id, sn,power, voltage, capacity,status, create_time, update_time,del_flag,tenant_id,
        electricity_cabinet_id,uid
        FROM t_electricity_battery
        WHERE uid = #{uid} and del_flag = 0
    </select>



	<select id="queryBorrowExpireBattery" resultMap="queryBorrowExpireBatteryMap">
        select b.sn, b.electricity_cabinet_name, b.borrow_expire_time, u.name, u.phone, b.status, b.tenant_id
        FROM t_electricity_battery b left join t_user_info u on b.uid = u.uid
        WHERE b.borrow_expire_time &lt; #{curTime} and b.del_flag = 0 and b.status in(2,3,4) limit #{offset}, #{size}
    </select>
	<resultMap id="queryBorrowExpireBatteryMap" type="com.xiliulou.electricity.vo.BorrowExpireBatteryVo">
		<result column="sn" property="sn"></result>
		<result column="electricity_cabinet_name" property="electricityCabinetName"></result>
		<result column="borrow_expire_time" property="borrowExpireTime"></result>
		<result column="name" property="name"></result>
		<result column="phone" property="phone"></result>
		<result column="status" property="status"></result>
		<result column="tenant_id" property="tenantId"></result>
	</resultMap>


	<select id="queryLowBattery" resultType="com.xiliulou.electricity.entity.ElectricityBattery">
		select sn, tenant_id, uid , power from t_electricity_battery where power &lt; #{batteryLevel} and report_type = 1 and status = 2 limit #{offset}, #{size}
    </select>

	<update id="updateByOrder">
		update t_electricity_battery
		set
		<if test="chargeStatus != null">
			charge_status =#{chargeStatus},
		</if>
		<if test="healthStatus != null">
			health_status =#{healthStatus},
		</if>
		<if test="power != null">
			power =#{power},
		</if>
		<if test="model != null">
			model =#{model},
		</if>
		electricity_cabinet_id=#{electricityCabinetId},
		electricity_cabinet_name=#{electricityCabinetName},
		uid=#{uid},status=#{status},
		update_time=#{updateTime}
		where id=#{id}
	</update>


</mapper>
