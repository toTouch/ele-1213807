<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiliulou.electricity.mapper.EleBatteryServiceFeeOrderMapper">


    <update id="updateByOrderNo">
        update t_ele_battery_service_fee_order
        <set>
            <if test="payAmount != null">
                pay_amount = #{payAmount},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="batteryServiceFeeEndTime != null">
                battery_service_fee_end_time = #{batteryServiceFeeEndTime},
            </if>
            <if test="payTime != null">
                `pay_time` = #{payTime},
            </if>
        </set>
        where order_id = #{orderId}
    </update>

    <select id="queryUserList" resultType="com.xiliulou.electricity.entity.EleBatteryServiceFeeOrder">
        SELECT * FROM
        t_ele_battery_service_fee_order
        WHERE uid =#{uid}
        and status =1
        <if test="startTime != null">
            and create_time BETWEEN #{startTime} and #{endTime}
        </if>
        order by create_time desc
        limit #{offset},#{size}
    </select>


    <select id="queryListForAdmin" resultType="com.xiliulou.electricity.vo.EleBatteryServiceFeeOrderVo">
        SELECT te.pay_amount, te.sn, te.battery_type, te.order_id, te.create_time, te.model_type, te.status, te.`pay_time`,
        te.battery_service_fee , te.battery_service_fee_generate_time, tf.model_battery_deposit,te.source,te.battery_service_fee_end_time,
        tf.name as franchisee_name FROM
        t_ele_battery_service_fee_order te left join t_franchisee tf on te.franchisee_id = tf.id
        WHERE te.uid =#{uid} and te.tenant_id=#{tenantId}
        <if test="status != null">
            and te.status =#{status}
        </if>
        <if test="startTime != null">
            and te.create_time BETWEEN #{startTime} and #{endTime}
        </if>
        <if test="franchiseeIds != null">
            and te.franchisee_id in
            <foreach collection="franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="storeIds != null">
            and te.store_id in
            <foreach collection="storeIds" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        order by te.create_time desc
        limit #{offset},#{size}
    </select>

    <select id="selectByPage" resultType="com.xiliulou.electricity.entity.EleBatteryServiceFeeOrder">
        SELECT pay_amount, order_id, source, status,  battery_service_fee_generate_time, update_time,battery_type,battery_service_fee_end_time, `pay_time`
        FROM     t_ele_battery_service_fee_order
        <where>
            <if test="status != null">
                and status in (1,3)
            </if>
            <if test="uid != null">
                and uid =#{uid}
            </if>
            <if test="tenantId != null">
                and tenant_id =#{tenantId}
            </if>
            order by id desc
            limit #{offset},#{size}
        </where>
    </select>


    <select id="queryList" resultType="com.xiliulou.electricity.vo.EleBatteryServiceFeeOrderVo">
        SELECT te.pay_amount, te.sn, te.battery_type, te.order_id, te.create_time, te.model_type,
        te.status,te.source,te.phone,te.name ,te.uid, te.status, te.`pay_time`,
        te.battery_service_fee , te.battery_service_fee_generate_time, tf.model_battery_deposit,
        tf.name as franchisee_name FROM
        t_ele_battery_service_fee_order te left join t_franchisee tf on te.franchisee_id = tf.id
        <where>
            <if test="query.status != null">
                and te.status =#{query.status}
            </if>
            <if test="query.beginTime != null">
                and te.create_time &gt;=#{query.beginTime}
            </if>
            <if test="query.endTime != null">
                and te.create_time &lt;=#{query.endTime}
            </if>
            <if test="query.uid != null">
                and te.uid =#{query.uid}
            </if>
            <if test="query.name != null and query.name != ''">
                and te.name =#{query.name}
            </if>
            <if test="query.orderId != null and query.orderId != ''">
                and te.order_id =#{query.orderId}
            </if>
            <if test="query.tenantId != null">
                and te.tenant_id =#{query.tenantId}
            </if>
            <if test="query.phone != null">
                and te.phone =#{query.phone}
            </if>
            <if test="query.source != null">
                and te.source =#{query.source}
            </if>
            <if test="query.franchiseeIds != null">
                and te.franchisee_id in
                <foreach collection="query.franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="query.storeIds != null">
                and te.store_id in
                <foreach collection="query.storeIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test=" query.payTimeBegin != null and query.payTimeEnd != null "> AND te.`pay_time` BETWEEN #{query.payTimeBegin} AND #{query.payTimeEnd} </if>
            <choose>
                <when test="query.orderByPayTime != nul">
                    <choose>
                        <when test="query.orderByPayTime == 1">
                            order by te.pay_time desc
                        </when>
                        <when test="query.orderByPayTime == 2">
                            order by te.pay_time
                        </when>
                    </choose>
                </when>
                <when test="query.orderByServiceFeeGenerateTime != null and query.orderByServiceFeeGenerateTime == 2">
                    order by te.battery_service_fee_generate_time
                </when>
                <otherwise>
                    order by te.battery_service_fee_generate_time desc
                </otherwise>
            </choose>
            limit #{query.offset},#{query.size}
        </where>
    </select>

    <select id="queryCount" resultType="java.lang.Integer">
        SELECT count(1) FROM
        t_ele_battery_service_fee_order te left join t_franchisee tf on te.franchisee_id = tf.id
        <where>
            <if test="query.status != null">
                and te.status =#{query.status}
            </if>
            <if test="query.beginTime != null">
                and te.create_time &gt;=#{query.beginTime}
            </if>
            <if test="query.endTime != null">
                and te.create_time &lt;=#{query.endTime}
            </if>
            <if test="query.uid != null">
                and te.uid =#{query.uid}
            </if>
            <if test="query.name != null and query.name != ''">
                and te.name =#{query.name}
            </if>
            <if test="query.orderId != null and query.orderId != ''">
                and te.order_id =#{query.orderId}
            </if>
            <if test="query.tenantId != null">
                and te.tenant_id =#{query.tenantId}
            </if>
            <if test="query.phone != null">
                and te.phone =#{query.phone}
            </if>
            <if test="query.source != null">
                and te.source =#{query.source}
            </if>
            <if test="query.franchiseeIds != null">
                and te.franchisee_id in
                <foreach collection="query.franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="query.storeIds != null">
                and te.store_id in
                <foreach collection="query.storeIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test=" query.payTimeBegin != null and query.payTimeEnd != null "> AND te.`pay_time` BETWEEN #{query.payTimeBegin} AND #{query.payTimeEnd} </if>
        </where>
    </select>


    <select id="queryTurnOver" resultType="decimal">
        select sum(pay_amount) from t_ele_battery_service_fee_order
        where status=1
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
        <if test="uid != null">
            and uid = #{uid}
        </if>
    </select>

    <select id="queryTenantTurnOver" resultType="decimal">
        select sum(pay_amount) from t_ele_battery_service_fee_order
        where status=1
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
        <if test="todayStartTime != null">
            and create_time &gt;=#{todayStartTime}
        </if>
        <!--        <if test="franchiseeId != null">-->
        <!--            and franchisee_id =#{franchiseeId}-->
        <!--        </if>-->
        <if test="franchiseeIds != null">
            and franchisee_id in
            <foreach collection="franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
    </select>

    <select id="queryTurnOverByCreateTime" resultType="com.xiliulou.electricity.vo.HomePageTurnOverGroupByWeekDayVo">
        select sum(pay_amount) as turnOver,FROM_UNIXTIME( create_time / 1000, '%Y-%m-%d' ) as
        weekDate from t_ele_battery_service_fee_order
        where status=1
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
        <!--        <if test="franchiseeId != null">-->
        <!--            and franchisee_id =#{franchiseeId}-->
        <!--        </if>-->
        <if test="franchiseeIds != null">
            and franchisee_id in
            <foreach collection="franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="beginTime != null">
            and create_time &gt;=#{beginTime}
        </if>
        <if test="endTime != null">
            and create_time &lt;=#{endTime}
        </if>
        GROUP BY
        weekDate
    </select>

    <select id="queryAllTurnOver" resultType="decimal">
        select sum(pay_amount) from t_ele_battery_service_fee_order
        where status=1
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
        <!--        <if test="franchiseeId != null">-->
        <!--            and franchisee_id =#{franchiseeId}-->
        <!--        </if>-->
        <if test="franchiseeIds != null">
            and franchisee_id in
            <foreach collection="franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="beginTime != null">
            and create_time &gt;=#{beginTime}
        </if>
        <if test="endTime != null">
            and create_time &lt;=#{endTime}
        </if>
    </select>

</mapper>
