<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiliulou.electricity.mapper.ElectricityMemberCardOrderMapper">
    <select id="queryList" resultType="com.xiliulou.electricity.vo.ElectricityMemberCardOrderVO">
        select
        tel.id ,
        tel.pay_amount ,
        tel.valid_days ,
        tel.create_time ,
        tel.order_id ,
        tel.status ,
        tel.user_name ,
        tel.member_card_type ,
        tel.max_use_count ,
        tel.card_name ,
        tel.franchisee_id ,
        tel.is_bind_activity ,
        tel.activity_id ,
        tel.member_card_model ,
        tel.pay_type ,
        tel.pay_count ,
        tel.coupon_id ,
        tel.source ,
        tel.ref_id ,
        tel.uid,
        tel.member_card_id ,
        tel.use_status ,
        tel.send_coupon_id ,
        tui.phone as phone , tui.name as userName from
        t_electricity_member_card_order tel

        LEFT JOIN t_user_info tui on tui.uid = tel.uid

        WHERE 0= 0
        <if test="query.cardPayCount != null">
            and tel.pay_count =#{query.cardPayCount}
        </if>
        <if test="query.franchiseeId != null">
            and tel.franchisee_id = #{query.franchiseeId}
        </if>
        <if test="query.userName != null and query.userName != ''">
            and tui.name like concat('%',#{query.userName,jdbcType=VARCHAR},'%')
        </if>
        <if test="query.uid != null">
            and tel.uid = #{query.uid}
        </if>
        <if test="query.phone != null">
            and tui.phone =#{query.phone}
        </if>
        <if test="query.payType != null">
            and tel.pay_type =#{query.payType}
        </if>
        <if test="query.orderId != null">
            and tel.order_id =#{query.orderId}
        </if>
        <if test="query.cardType != null">
            and tel.member_card_type =#{query.cardType}
        </if>
        <if test="query.payType != null">
            and tel.pay_type =#{query.payType}
        </if>
        <if test="query.source != null">
            and tel.source =#{query.source}
        </if>
        <if test="query.useStatus != null">
            and tel.use_status =#{query.useStatus}
        </if>
        <if test="query.refId != null">
            and tel.ref_id =#{query.refId}
        </if>
        <if test="query.cardModel != null">
            and tel.member_card_model =#{query.cardModel}
        </if>
        <if test="query.status != null">
            and tel.status =#{query.status}
        </if>
        <if test="query.tenantId != null">
            and tel.tenant_id = #{query.tenantId}
        </if>
        <if test="query.payType != null">
            and tel.pay_type = #{query.payType}
        </if>
        <if test="query.queryStartTime != null">
            and tel.create_time BETWEEN #{query.queryStartTime} and #{query.queryEndTime}
        </if>
        <if test="query.franchiseeIds != null">
            and tel.franchisee_id in
            <foreach collection="query.franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="query.storeIds != null">
            and tel.store_id in
            <foreach collection="query.storeIds" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        order by tel.id desc
        limit #{query.offset}, #{query.size}
    </select>

    <select id="queryCount" resultType="java.lang.Integer">
        select COUNT(1)
        from t_electricity_member_card_order tel
        LEFT JOIN t_user_info tui on tui.uid = tel.uid
        WHERE 0= 0
        <if test="query.userName != null and query.userName != ''">
            and tui.name like concat('%',#{query.userName,jdbcType=VARCHAR},'%')
        </if>
        <if test="query.uid != null">
            and tel.uid = #{query.uid}
        </if>
        <if test="query.phone != null">
            and tui.phone =#{query.phone}
        </if>
        <if test="query.payType != null">
            and tel.pay_type =#{query.payType}
        </if>
        <if test="query.orderId != null">
            and tel.order_id =#{query.orderId}
        </if>
        <if test="query.payType != null">
            and tel.pay_type =#{query.payType}
        </if>
        <if test="query.source != null">
            and tel.source =#{query.source}
        </if>
        <if test="query.refId != null">
            and tel.ref_id =#{query.refId}
        </if>
        <if test="query.cardType != null">
            and tel.member_card_type =#{query.cardType}
        </if>
        <if test="query.payType != null">
            and tel.pay_type = #{query.payType}
        </if>
        <if test="query.cardModel != null">
            and tel.member_card_model =#{query.cardModel}
        </if>
        <if test="query.status != null">
            and tel.status =#{query.status}
        </if>
        <if test="query.useStatus != null">
            and tel.use_status =#{query.useStatus}
        </if>
        <if test="query.tenantId != null">
            and tel.tenant_id = #{query.tenantId}
        </if>
        <if test="query.queryStartTime != null">
            and tel.create_time BETWEEN #{query.queryStartTime} and #{query.queryEndTime}
        </if>
        <if test="query.franchiseeIds != null">
            and tel.franchisee_id in
            <foreach collection="query.franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="query.storeIds != null">
            and tel.store_id in
            <foreach collection="query.storeIds" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="query.franchiseeId != null">
            and tel.franchisee_id = #{query.franchiseeId}
        </if>
        <if test="query.cardPayCount != null">
            and tel.pay_count =#{query.cardPayCount}
        </if>
    </select>


    <select id="queryUserList" resultType="com.xiliulou.electricity.entity.ElectricityMemberCardOrder">
        SELECT * FROM
        t_electricity_member_card_order
        WHERE uid =#{uid}
        and status =1 and member_card_model=0
        <if test="startTime != null">
            and create_time BETWEEN #{startTime} and #{endTime}
        </if>
        order by create_time desc
        limit #{offset},#{size}

    </select>
    
    <select id="selectUserMemberCardOrderList" resultType="com.xiliulou.electricity.entity.ElectricityMemberCardOrder">
        SELECT
        id,pay_amount,valid_days,create_time,order_id,status,member_card_id,user_name,max_use_count,card_name,franchisee_id,pay_type,pay_count,source,coupon_id,use_status ,refund_status, order_type
        FROM t_electricity_member_card_order
        WHERE uid =#{uid} and member_card_model=0
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
        <if test="status != null">
            and status = #{status}
        </if>
        <if test="queryStartTime != null">
            and create_time &gt;= #{queryStartTime}
        </if>
        <if test="queryEndTime != null">
            and create_time &lt;= #{queryEndTime}
        </if>
        order by id desc
        limit #{offset},#{size}
    </select>
    
    <select id="selectUserMemberCardOrderCount" resultType="java.lang.Integer">
        SELECT count(1)
        FROM t_electricity_member_card_order
        WHERE uid =#{uid}
        and member_card_model=0
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
        <if test="status != null">
            and status = #{status}
        </if>
        <if test="queryStartTime != null">
            and create_time &gt;= #{queryStartTime}
        </if>
        <if test="queryEndTime != null">
            and create_time &lt;= #{queryEndTime}
        </if>
    </select>

    <select id="getMemberCardOrderCount" resultType="java.lang.Long">

        SELECT count(1)
        FROM t_electricity_member_card_order
        WHERE uid =#{uid}
        and status =1
        <if test="startTime != null">
            and create_time BETWEEN #{startTime} and #{endTime}
        </if>


    </select>


    <select id="homeOne" resultType="java.math.BigDecimal">

        SELECT sum(pay_amount) FROM t_electricity_member_card_order
        WHERE status = 1 and create_time >= #{first} and create_time &lt;=#{now}

        <if test="cardIdList!=null and cardIdList!=''">
            and member_card_id in
            <foreach collection="cardIdList" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="tenantId != null ">
            and tenant_id = #{tenantId}
        </if>

    </select>


    <select id="homeTwo" resultType="java.util.HashMap">

        select from_unixtime(create_time / 1000, '%Y-%m-%d') date, sum(pay_amount) as money
        from t_electricity_member_card_order
        where create_time >= #{startTimeMilliDay} and create_time &lt;= #{endTimeMilliDay} and status = 1

        <if test="cardIdList!=null and cardIdList!=''">
            and member_card_id in
            <foreach collection="cardIdList" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
        group by date
        order by date desc

    </select>

    <select id="queryTurnOver" resultType="decimal">
        select sum(pay_amount) from t_electricity_member_card_order
        where status=1
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
        <if test="uid != null">
            and uid = #{uid}
        </if>
    </select>


    <select id="queryLastPayMemberCardTimeByUid"
            resultType="com.xiliulou.electricity.entity.ElectricityMemberCardOrder">
        select * from t_electricity_member_card_order where uid=#{uid}
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
        <if test="franchiseeId != null">
            and franchisee_id = #{franchiseeId}
        </if>
        ORDER BY id DESC limit 1
    </select>


    <select id="selectLatestByUid"   resultType="com.xiliulou.electricity.entity.ElectricityMemberCardOrder">
        select id,pay_amount,valid_days,uid,order_id,status,member_card_id,max_use_count,card_name,pay_type,create_time,update_time
        from t_electricity_member_card_order where uid=#{uid} and status=1  ORDER BY id DESC limit 1
    </select>

    <select id="queryLastPayMemberCardTimeByUidAndSuccess"
            resultType="com.xiliulou.electricity.entity.ElectricityMemberCardOrder">
        select * from t_electricity_member_card_order where uid=#{uid} and status=1
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
        <if test="franchiseeId != null">
            and franchisee_id = #{franchiseeId}
        </if>
        ORDER BY id DESC limit 1
    </select>

    <select id="queryBatteryMemberCardTurnOver" resultType="decimal">
        select sum(pay_amount) from t_electricity_member_card_order
        where status=1 and pay_type=0 and member_card_model=0
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
        <if test="todayStartTime != null">
            and create_time &gt;=#{todayStartTime}
        </if>
        <!--        <if test="franchiseeId != null">-->
        <!--            and franchisee_id =#{franchiseeId}-->
        <!--        </if>-->
        <if test="franchiseeIds != null">
            and franchisee_id in
            <foreach collection="franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
    </select>


    <select id="queryBatteryMemberCardTurnOverByCreateTime"
            resultType="com.xiliulou.electricity.vo.HomePageTurnOverGroupByWeekDayVo">
        select sum(pay_amount) as turnOver,FROM_UNIXTIME( create_time / 1000, '%Y-%m-%d' ) as
        weekDate from t_electricity_member_card_order
        where status=1 and pay_type=0 and member_card_model=0
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
        <!--        <if test="franchiseeId != null">-->
        <!--            and franchisee_id =#{franchiseeId}-->
        <!--        </if>-->
        <if test="franchiseeIds != null">
            and franchisee_id in
            <foreach collection="franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="beginTime != null">
            and create_time &gt;=#{beginTime}
        </if>
        <if test="endTime != null">
            and create_time &lt;=#{endTime}
        </if>
        GROUP BY
        weekDate
    </select>

    <select id="queryCarMemberCardTurnOver" resultType="decimal">
        select sum(pay_amount) from t_electricity_member_card_order
        where status=1 and pay_type=0 and member_card_model=1
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
        <if test="todayStartTime != null">
            and create_time &gt;=#{todayStartTime}
        </if>
        <!--        <if test="franchiseeId != null">-->
        <!--            and franchisee_id =#{franchiseeId}-->
        <!--        </if>-->
        <if test="franchiseeIds != null">
            and franchisee_id in
            <foreach collection="franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
    </select>

    <select id="queryCarMemberCardTurnOverByCreateTime"
            resultType="com.xiliulou.electricity.vo.HomePageTurnOverGroupByWeekDayVo">
        select sum(pay_amount) as turnOver,FROM_UNIXTIME( create_time / 1000, '%Y-%m-%d' ) as
        weekDate from t_electricity_member_card_order
        where status=1 and pay_type=0 and member_card_model=1
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
        <!--        <if test="franchiseeId != null">-->
        <!--            and franchisee_id =#{franchiseeId}-->
        <!--        </if>-->
        <if test="franchiseeIds != null">
            and franchisee_id in
            <foreach collection="franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="beginTime != null">
            and create_time &gt;=#{beginTime}
        </if>
        <if test="endTime != null">
            and create_time &lt;=#{endTime}
        </if>
        GROUP BY
        weekDate
    </select>

    <select id="querySumMemberCardTurnOverByCreateTime" resultType="decimal">
        select sum(pay_amount) from t_electricity_member_card_order
        where status=1 and pay_type=0
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
        <!--        <if test="franchiseeId != null">-->
        <!--            and franchisee_id =#{franchiseeId}-->
        <!--        </if>-->
        <if test="franchiseeIds != null">
            and franchisee_id in
            <foreach collection="franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="beginTime != null">
            and create_time &gt;=#{beginTime}
        </if>
        <if test="endTime != null">
            and create_time &lt;=#{endTime}
        </if>
    </select>

    <select id="queryCreateTimeMaxMemberCardOrder" resultType="com.xiliulou.electricity.entity.ElectricityMemberCardOrder">
        select id,order_id,status,coupon_id from t_electricity_member_card_order where uid=#{uid} and tenant_id=#{tenantId} order by create_time desc limit 1
    </select>
    
    <select id="queryMaxPayCountByUid" resultType="integer">
        select max(pay_count) from t_electricity_member_card_order
        where tenant_id = #{tenantId} and uid = #{uid}
    </select>

    <select id="selectFirstMemberCardOrder" resultType="com.xiliulou.electricity.entity.ElectricityMemberCardOrder">
        select id,ref_id from t_electricity_member_card_order where uid=#{uid} and status=1 and pay_count=1 order by create_time desc limit 1
    </select>

    <select id="checkOrderByMembercardId" resultType="Integer">
        select 1 from t_electricity_member_card_order where member_card_id=#{membercardId}
        and use_status in('${@com.xiliulou.electricity.enums.UseStateEnum@UN_USED.code}'
        ,'${@com.xiliulou.electricity.enums.UseStateEnum@IN_USE.code}') LIMIT 1
    </select>

    <update id="updateStatusByOrderNo">
        update t_electricity_member_card_order
        <set>
            <if test="useStatus != null">
                use_status = #{useStatus},
            </if>
            <if test="refundStatus != null">
                refund_status = #{refundStatus},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where order_id = #{orderId}
    </update>

    <update id="batchUpdateStatusByOrderNo">
        update t_electricity_member_card_order set use_status = #{useStatus},update_time = UNIX_TIMESTAMP()*1000
        where order_id in
        <foreach collection="orderIds" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>

</mapper>
