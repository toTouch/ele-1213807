<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiliulou.electricity.mapper.ElectricityMemberCardOrderMapper">
    <select id="queryList" resultType="com.xiliulou.electricity.vo.ElectricityMemberCardOrderVO">
        select
        tel.id ,
        tel.pay_amount ,
        tel.valid_days ,
        tel.create_time ,
        tel.order_id ,
        tel.status ,
        tel.user_name ,
        tel.member_card_type ,
        tel.max_use_count ,
        tel.card_name ,
        tel.franchisee_id ,
        tel.is_bind_activity ,
        tel.activity_id ,
        tel.member_card_model ,
        tel.pay_type ,
        tel.pay_count ,
        tel.coupon_id ,
        tel.source ,
        tel.ref_id ,
        tel.uid,
        tel.member_card_id ,
        tel.use_status ,
        tel.send_coupon_id ,
        tel.coupon_ids,
        tel.payment_channel,
        tel.external_agreement_no,
        tel.issue
        from t_electricity_member_card_order tel
        <if test="query.model != null and '' != query.model and query.model.toString() != '1'">
            left join t_member_card_battery_type mcbt on tel.member_card_id = mcbt.mid
        </if>
        <if test="query.model != null and '' != query.model and query.model.toString() == '1'">
            left join t_franchisee tf on tel.franchisee_id = tf.id
        </if>
        <where>
            <if test="query.cardPayCount != null">
                and tel.pay_count =#{query.cardPayCount}
            </if>
            <if test="query.franchiseeId != null">
                and tel.franchisee_id = #{query.franchiseeId}
            </if>
            <if test="query.uid != null">
                and tel.uid = #{query.uid}
            </if>
            <if test="query.payType != null">
                and tel.pay_type =#{query.payType}
            </if>
            <if test="query.orderId != null">
                and tel.order_id =#{query.orderId}
            </if>
            <if test="query.cardType != null">
                and tel.member_card_type =#{query.cardType}
            </if>
            <if test="query.payType != null">
                and tel.pay_type =#{query.payType}
            </if>
            <if test="query.source != null">
                and tel.source =#{query.source}
            </if>
            <if test="query.useStatus != null">
                and tel.use_status =#{query.useStatus}
            </if>
            <if test="query.refId != null">
                and tel.ref_id =#{query.refId}
            </if>
            <if test="query.cardModel != null">
                and tel.member_card_model =#{query.cardModel}
            </if>
            <if test="query.status != null">
                and tel.status =#{query.status}
            </if>
            <if test="query.tenantId != null">
                and tel.tenant_id = #{query.tenantId}
            </if>
            <if test="query.payType != null">
                and tel.pay_type = #{query.payType}
            </if>
            <if test="query.cardId != null">
                and tel.member_card_id = #{query.cardId}
            </if>
            <if test="query.queryStartTime != null">
                and tel.create_time BETWEEN #{query.queryStartTime} and #{query.queryEndTime}
            </if>
            <if test="query.externalAgreementNo != null and query.externalAgreementNo != ''">
                and tel.external_agreement_no = #{query.externalAgreementNo}
            </if>
            <if test="query.model != null and '' != query.model and query.model.toString() != '1'">
                and mcbt.batteryType = #{query.model}
            </if>
            <if test="query.model != null and '' != query.model and query.model.toString() == '1'">
                and tf.model_type = 1
            </if>
            <if test="query.franchiseeIds != null">
                and tel.franchisee_id in
                <foreach collection="query.franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="query.storeIds != null">
                and tel.store_id in
                <foreach collection="query.storeIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="query.paymentChannel != null and query.paymentChannel != ''">
                and tel.payment_channel = #{query.paymentChannel}
            </if>
            <if test="query.memberCardIds != null and query.memberCardIds.size()>0">
                and tel.member_card_id in
                <foreach collection="query.memberCardIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
        order by tel.id desc
        limit #{query.offset}, #{query.size}
    </select>
    
    <select id="queryCount" resultType="java.lang.Integer">
        select COUNT(1)
        from t_electricity_member_card_order tel
        <if test="query.model != null and '' != query.model and query.model.toString() != '1'">
            left join t_member_card_battery_type mcbt on tel.member_card_id = mcbt.mid
        </if>
        <if test="query.model != null and '' != query.model and query.model.toString() == '1'">
            left join t_franchisee tf on tel.franchisee_id = tf.id
        </if>
        <where>
            <if test="query.uid != null">
                and tel.uid = #{query.uid}
            </if>
            <if test="query.payType != null">
                and tel.pay_type =#{query.payType}
            </if>
            <if test="query.orderId != null">
                and tel.order_id =#{query.orderId}
            </if>
            <if test="query.payType != null">
                and tel.pay_type =#{query.payType}
            </if>
            <if test="query.source != null">
                and tel.source =#{query.source}
            </if>
            <if test="query.refId != null">
                and tel.ref_id =#{query.refId}
            </if>
            <if test="query.cardType != null">
                and tel.member_card_type =#{query.cardType}
            </if>
            <if test="query.payType != null">
                and tel.pay_type = #{query.payType}
            </if>
            <if test="query.cardModel != null">
                and tel.member_card_model =#{query.cardModel}
            </if>
            <if test="query.status != null">
                and tel.status =#{query.status}
            </if>
            <if test="query.useStatus != null">
                and tel.use_status =#{query.useStatus}
            </if>
            <if test="query.tenantId != null">
                and tel.tenant_id = #{query.tenantId}
            </if>
            <if test="query.cardId != null">
                and tel.member_card_id = #{query.cardId}
            </if>
            <if test="query.queryStartTime != null">
                and tel.create_time BETWEEN #{query.queryStartTime} and #{query.queryEndTime}
            </if>
            <if test="query.externalAgreementNo != null and query.externalAgreementNo != ''">
                and tel.external_agreement_no = #{query.externalAgreementNo}
            </if>
            <if test="query.externalAgreementNo != null and query.externalAgreementNo != ''">
                and tel.external_agreement_no = #{query.externalAgreementNo}
            </if>
            <if test="query.model != null and '' != query.model and query.model.toString() != '1'">
                and mcbt.batteryType = #{query.model}
            </if>
            <if test="query.model != null and '' != query.model and query.model.toString() == '1'">
                and tf.model_type = 1
            </if>
            <if test="query.franchiseeIds != null">
                and tel.franchisee_id in
                <foreach collection="query.franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="query.storeIds != null">
                and tel.store_id in
                <foreach collection="query.storeIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="query.franchiseeId != null">
                and tel.franchisee_id = #{query.franchiseeId}
            </if>
            <if test="query.cardPayCount != null">
                and tel.pay_count =#{query.cardPayCount}
            </if>
            <if test="query.paymentChannel != null and query.paymentChannel != ''">
                and tel.payment_channel = #{query.paymentChannel}
            </if>
            <if test="query.memberCardIds != null and query.memberCardIds.size()>0">
                and tel.member_card_id in
                <foreach collection="query.memberCardIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>
    
    <select id="queryUserList" resultType="com.xiliulou.electricity.entity.ElectricityMemberCardOrder">
        SELECT * FROM
        t_electricity_member_card_order
        WHERE uid =#{uid}
        and status =1 and member_card_model=0
        <if test="startTime != null">
            and create_time BETWEEN #{startTime} and #{endTime}
        </if>
        order by create_time desc
        limit #{offset},#{size}
    
    </select>
    
    <select id="selectUserMemberCardOrderList" resultType="com.xiliulou.electricity.entity.ElectricityMemberCardOrder">
        SELECT
        id,pay_amount,valid_days,create_time,order_id,status,member_card_id,user_name,max_use_count,card_name,franchisee_id,pay_type,pay_count,source,coupon_id,use_status
        ,refund_status, order_type ,payment_channel, external_agreement_no, issue
        FROM t_electricity_member_card_order
        WHERE uid =#{uid} and member_card_model=0
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
        <if test="status != null">
            and status = #{status}
        </if>
        <if test="queryStartTime != null">
            and create_time &gt;= #{queryStartTime}
        </if>
        <if test="queryEndTime != null">
            and create_time &lt;= #{queryEndTime}
        </if>
        order by id desc
        limit #{offset},#{size}
    </select>
    
    <select id="selectUserMemberCardOrderCount" resultType="java.lang.Integer">
        SELECT count(1)
        FROM t_electricity_member_card_order
        WHERE uid =#{uid}
        and member_card_model=0
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
        <if test="status != null">
            and status = #{status}
        </if>
        <if test="queryStartTime != null">
            and create_time &gt;= #{queryStartTime}
        </if>
        <if test="queryEndTime != null">
            and create_time &lt;= #{queryEndTime}
        </if>
    </select>
    
    <select id="getMemberCardOrderCount" resultType="java.lang.Long">
        
        SELECT count(1)
        FROM t_electricity_member_card_order
        WHERE uid =#{uid}
        and status =1
        <if test="startTime != null">
            and create_time BETWEEN #{startTime} and #{endTime}
        </if>
    
    
    </select>
    
    
    <select id="homeOne" resultType="java.math.BigDecimal">
        
        SELECT sum(pay_amount) FROM t_electricity_member_card_order
        WHERE status = 1 and create_time >= #{first} and create_time &lt;=#{now}
        
        <if test="cardIdList!=null and cardIdList!=''">
            and member_card_id in
            <foreach collection="cardIdList" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="tenantId != null ">
            and tenant_id = #{tenantId}
        </if>
    
    </select>
    
    
    <select id="homeTwo" resultType="java.util.HashMap">
        
        select from_unixtime(create_time / 1000, '%Y-%m-%d') date, sum(pay_amount) as money
        from t_electricity_member_card_order
        where create_time >= #{startTimeMilliDay} and create_time &lt;= #{endTimeMilliDay} and status = 1
        
        <if test="cardIdList!=null and cardIdList!=''">
            and member_card_id in
            <foreach collection="cardIdList" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
        group by date
        order by date desc
    
    </select>
    
    <select id="queryTurnOver" resultType="decimal">
        select sum(pay_amount) from t_electricity_member_card_order
        where status=1
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
        <if test="uid != null">
            and uid = #{uid}
        </if>
    </select>
    
    
    <select id="queryLastPayMemberCardTimeByUid"
        resultType="com.xiliulou.electricity.entity.ElectricityMemberCardOrder">
        select * from t_electricity_member_card_order where uid=#{uid}
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
        <if test="franchiseeId != null">
            and franchisee_id = #{franchiseeId}
        </if>
        ORDER BY id DESC limit 1
    </select>
    
    
    <select id="selectLatestByUid" resultType="com.xiliulou.electricity.entity.ElectricityMemberCardOrder">
        select id,
               pay_amount,
               valid_days,
               uid,
               order_id,
               status,
               member_card_id,
               max_use_count,
               card_name,
               pay_type,
               payment_channel,
               create_time,
               update_time
        from t_electricity_member_card_order
        where uid = #{uid}
          and status = 1
        ORDER BY id DESC limit 1
    </select>
    
    <select id="queryCreateTimeMaxMemberCardOrder" resultType="com.xiliulou.electricity.entity.ElectricityMemberCardOrder">
        select id, order_id, status, coupon_id
        from t_electricity_member_card_order
        where uid = #{uid}
          and tenant_id = #{tenantId}
        order by create_time desc limit 1
    </select>
    
    <select id="queryMaxPayCountByUid" resultType="integer">
        select max(pay_count)
        from t_electricity_member_card_order
        where tenant_id = #{tenantId}
          and uid = #{uid}
    </select>
    
    <select id="selectFirstMemberCardOrder" resultType="com.xiliulou.electricity.entity.ElectricityMemberCardOrder">
        select id, ref_id, create_time, update_time
        from t_electricity_member_card_order
        where uid = #{uid}
          and status = 1
          and pay_count = 1
        order by create_time desc limit 1
    </select>
    
    <select id="checkOrderByMembercardId" resultType="Integer">
        select 1 from t_electricity_member_card_order where member_card_id=#{membercardId}
        and use_status in('${@com.xiliulou.electricity.enums.UseStateEnum@UN_USED.code}'
        ,'${@com.xiliulou.electricity.enums.UseStateEnum@IN_USE.code}')
        and status = 1
        LIMIT 1
    </select>
    
    <update id="updateStatusByOrderNo">
        update t_electricity_member_card_order
        <set>
            <if test="useStatus != null">
                use_status = #{useStatus},
            </if>
            <if test="refundStatus != null">
                refund_status = #{refundStatus},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where order_id = #{orderId}
    </update>
    
    <update id="batchUpdateStatusByOrderNo">
        update t_electricity_member_card_order set use_status = #{useStatus},update_time = UNIX_TIMESTAMP()*1000
        where order_id in
        <foreach collection="orderIds" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>
    
    
    <select id="countRefundOrderByUid" resultType="Integer">
        select count(1)
        from t_electricity_member_card_order emco
                 left join t_battery_membercard_refund_order bmro on (emco.order_id) = (bmro.member_card_order_no collate utf8mb4_0900_ai_ci)
                 left join t_user_info_extra uie on emco.uid = uie.uid
        where emco.status = 1
          and emco.pay_type = 0
          and bmro.status = 4
          and emco.uid = #{uid}
          and emco.id >= uie.lost_user_recently_first_order_id
    </select>
    
    <select id="countSuccessOrderByUid" resultType="Integer">
        select count(1)
        from t_electricity_member_card_order emco
            left join t_user_info_extra uie on emco.uid = uie.uid
        where emco.status = 1
          and emco.pay_type = 0
          and emco.uid = #{uid}
          and emco.id >= uie.lost_user_recently_first_order_id
    </select>
    
    <update id="batchUpdateChannelOrderStatusByOrderNo">
        update t_electricity_member_card_order set use_status = #{useStatus},update_time = UNIX_TIMESTAMP()*1000
        where
        order_type = 1
        and order_id in
        <foreach collection="orderIds" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>

    <update id="updatePayChannelById">
        update t_electricity_member_card_order
        set payment_channel = #{paymentChannel},
            update_time     = #{updateTime}
        where id = #{id}
    </update>

    <update id="deactivateUsingOrder">
        update t_electricity_member_card_order set use_status = 3,update_time = #{updateTime} where uid = #{uid} and use_status in (1,2)
    </update>

    <sql id="column">
        id ,
        pay_amount ,
        valid_days ,
        create_time ,
        order_id ,
        status ,
        user_name ,
        member_card_type ,
        max_use_count ,
        card_name ,
        franchisee_id ,
        is_bind_activity ,
        activity_id ,
        member_card_model ,
        pay_type ,
        pay_count ,
        coupon_id ,
        source ,
        ref_id ,
        uid,
        member_card_id ,
        use_status ,
        send_coupon_id,
        payment_channel,
		order_type,
        external_agreement_no,
        issue
    </sql>
    
    <select id="selectListByOrderIds" resultType="com.xiliulou.electricity.entity.ElectricityMemberCardOrder">
        select <include refid="column"/>
        from t_electricity_member_card_order
        <where>
            order_id in
            <foreach collection="orderIdList" separator="," open="(" close=")" item="orderId">
                #{orderId}
            </foreach>
        </where>
    </select>
    
    <sql id="pageFilter">
        <where>
            0= 0
            <if test="query.cardPayCount != null">
                and tel.pay_count =#{query.cardPayCount}
            </if>
            <if test="query.franchiseeId != null">
                and tel.franchisee_id = #{query.franchiseeId}
            </if>
            <if test="query.uid != null">
                and tel.uid = #{query.uid}
            </if>
            <if test="query.payType != null">
                and tel.pay_type =#{query.payType}
            </if>
            <if test="query.orderId != null">
                and tel.order_id =#{query.orderId}
            </if>
            <if test="query.cardType != null">
                and tel.member_card_type =#{query.cardType}
            </if>
            <if test="query.payType != null">
                and tel.pay_type =#{query.payType}
            </if>
            <if test="query.source != null">
                and tel.source =#{query.source}
            </if>
            <if test="query.useStatus != null">
                and tel.use_status =#{query.useStatus}
            </if>
            <if test="query.refId != null">
                and tel.ref_id =#{query.refId}
            </if>
            <if test="query.cardModel != null">
                and tel.member_card_model =#{query.cardModel}
            </if>
            <if test="query.status != null">
                and tel.status =#{query.status}
            </if>
            <if test="query.tenantId != null">
                and tel.tenant_id = #{query.tenantId}
            </if>
            <if test="query.payType != null">
                and tel.pay_type = #{query.payType}
            </if>
            <if test="query.cardId != null">
                and tel.member_card_id = #{query.cardId}
            </if>
            <if test="query.queryStartTime != null">
                and tel.create_time BETWEEN #{query.queryStartTime} and #{query.queryEndTime}
            </if>
            <if test="query.franchiseeIds != null">
                and tel.franchisee_id in
                <foreach collection="query.franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="query.storeIds != null">
                and tel.store_id in
                <foreach collection="query.storeIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </sql>
    
    <sql id="pageColumn">
            tel.id ,
            tel.pay_amount ,
            tel.valid_days ,
            tel.create_time ,
            tel.order_id ,
            tel.status ,
            tel.user_name ,
            tel.member_card_type ,
            tel.max_use_count ,
            tel.card_name ,
            tel.franchisee_id ,
            tel.is_bind_activity ,
            tel.activity_id ,
            tel.member_card_model ,
            tel.pay_type ,
            tel.pay_count ,
            tel.coupon_id ,
            tel.source ,
            tel.ref_id ,
            tel.uid,
            tel.member_card_id ,
            tel.use_status ,
            tel.send_coupon_id ,
            tel.coupon_ids,
            tel.tenant_id,
            tel.external_agreement_no,
            tel.issue
    </sql>
    <select id="selectListSuperAdminPage"
            resultType="com.xiliulou.electricity.vo.ElectricityMemberCardOrderVO">
            select
            <include refid="pageColumn"/>
           from
            t_electricity_member_card_order tel
            LEFT JOIN t_user_info tui on tui.uid = tel.uid
            <include refid="pageFilter"/>
            order by tel.id desc
            limit #{query.offset}, #{query.size}
 
    </select>
    
    
    <select id="selectListByCreateTime" resultType="com.xiliulou.electricity.entity.ElectricityMemberCardOrder">
        select
        <include refid="column"/>
        from t_electricity_member_card_order
        where
        create_time &gt;=#{beginTime}
        and create_time &lt;=#{endTime}
    </select>
    
    <select id="existNotFinishOrderByUid" resultType="java.lang.Integer">
        select 1 from t_electricity_member_card_order where uid = #{uid} and use_status in (1, 2) and status = 1 limit 1
    </select>
    
    <select id="selectOrderByAgreementNoAndIssue"
            resultType="com.xiliulou.electricity.entity.ElectricityMemberCardOrder">
        select
        <include refid="column"/>
        from t_electricity_member_card_order
        where external_agreement_no = #{externalAgreementNo}
            and issue = #{issue}
    </select>
    
    <select id="selectListOrderByExternalAgreementNo"
            resultType="com.xiliulou.electricity.entity.ElectricityMemberCardOrder">
        select
        <include refid="column"/>
        from t_electricity_member_card_order
        where external_agreement_no = #{externalAgreementNo}
    </select>

    <select id="selectUserLastPaySuccessByUid"
            resultType="com.xiliulou.electricity.entity.ElectricityMemberCardOrder">
        select
        <include refid="column"/>
        from t_electricity_member_card_order
        <where>
            status = 1
            and uid = #{uid}
        </where>
        order by id desc
        limit 1
    </select>

    <select id="selectMemberCardId" resultType="java.lang.Long">
        select member_card_id
        from t_electricity_member_card_order
        where tenant_id = #{tenantId}
        group by member_card_id
    </select>
</mapper>
