<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiliulou.electricity.mapper.BatteryChargeConfigMapper">

    <resultMap type="com.xiliulou.electricity.entity.BatteryChargeConfig" id="BatteryChargeConfigMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="applicationModel" column="application_model" jdbcType="VARCHAR"/>
        <result property="config" column="config" jdbcType="VARCHAR"/>
        <result property="electricityCabinetId" column="electricity_cabinet_id" jdbcType="INTEGER"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
        <result property="tenantId" column="tenant_id" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 基础字段 -->
    <sql id="selectBatteryChargeConfig">
       	select   id, application_model, config, electricity_cabinet_id, del_flag, tenant_id, create_time, update_time        from t_battery_charge_config
    </sql>

    <!--查询单个-->
    <select id="selectById" resultMap="BatteryChargeConfigMap">
        <include refid="selectBatteryChargeConfig"/>
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="selectByPage" resultMap="BatteryChargeConfigMap">
        <include refid="selectBatteryChargeConfig"/>
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="selectByQuery" resultMap="BatteryChargeConfigMap">
        <include refid="selectBatteryChargeConfig"/>
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="applicationModel != null and applicationModel != ''">
                and application_model = #{applicationModel}
            </if>
            <if test="config != null and config != ''">
                and config = #{config}
            </if>
            <if test="electricityCabinetId != null">
                and electricity_cabinet_id = #{electricityCabinetId}
            </if>
            <if test="delFlag != null">
                and del_flag = #{delFlag}
            </if>
            <if test="tenantId != null">
                and tenant_id = #{tenantId}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
        limit 1;
    </select>

    <!--新增所有列-->
    <insert id="insertOne" keyProperty="id" useGeneratedKeys="true">
        insert into t_battery_charge_config(application_model, config, electricity_cabinet_id, del_flag, tenant_id, create_time, update_time)
        values (#{applicationModel}, #{config}, #{electricityCabinetId}, #{delFlag}, #{tenantId}, #{createTime}, #{updateTime})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update t_battery_charge_config
        <set>
            <if test="applicationModel != null and applicationModel != ''">
                application_model = #{applicationModel},
            </if>
            <if test="config != null and config != ''">
                config = #{config},
            </if>
            <if test="electricityCabinetId != null">
                electricity_cabinet_id = #{electricityCabinetId},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id} and tenant_id=#{tenantId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from t_battery_charge_config where id = #{id} and tenant_id=#{tenantId}
    </delete>

    <!--原子更新-->
    <insert id="insertOrUpdate" keyProperty="id" useGeneratedKeys="true">
        insert into t_battery_charge_config(application_model, config, electricity_cabinet_id, del_flag, tenant_id,create_time, update_time)
        values (#{applicationModel}, #{config}, #{electricityCabinetId}, #{delFlag}, #{tenantId}, #{createTime}, #{updateTime}) on duplicate key
        update application_model = #{applicationModel} ,config = #{config} , update_time =#{updateTime}
    </insert>

</mapper>
