<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiliulou.electricity.mapper.DivisionAccountBatteryMembercardMapper">

    <resultMap type="com.xiliulou.electricity.entity.DivisionAccountBatteryMembercard"
               id="DivisionAccountBatteryMembercardMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="divisionAccountId" column="division_account_id" jdbcType="INTEGER"/>
        <result property="batteryMembercardId" column="battery_membercard_id" jdbcType="INTEGER"/>
        <result property="tenantId" column="tenant_id" jdbcType="INTEGER"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="DivisionAccountBatteryMembercardMap">
        select
          id, division_account_id, battery_membercard_id, tenant_id, del_flag, create_time, update_time
        from t_division_account_battery_membercard
        where id = #{id}
    </select>

    <select id="selectByDivisionAccountConfigId" resultType="long">
        select
          battery_membercard_id
        from t_division_account_battery_membercard
        where division_account_id = #{id}
    </select>

    <select id="selectByBatteryMembercardId" resultType="long">
        select
          division_account_id
        from t_division_account_battery_membercard
        where battery_membercard_id = #{membercardId} order by id limit 1
    </select>

    <select id="selectByTenantId" resultType="long">
        select
          dab.battery_membercard_id
        from t_division_account_config dac left join t_division_account_battery_membercard dab on dac.id=dab.division_account_id
        where dac.tenant_id = #{tenantId} and dac.status=0 and dac.del_flag=0
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="DivisionAccountBatteryMembercardMap">
        select
          id, division_account_id, battery_membercard_id, tenant_id, del_flag, create_time, update_time
        from t_division_account_battery_membercard
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="DivisionAccountBatteryMembercardMap">
        select
        id, division_account_id, battery_membercard_id, tenant_id, del_flag, create_time, update_time
        from t_division_account_battery_membercard
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="divisionAccountId != null">
                and division_account_id = #{divisionAccountId}
            </if>
            <if test="batteryMembercardId != null">
                and battery_membercard_id = #{batteryMembercardId}
            </if>
            <if test="tenantId != null">
                and tenant_id = #{tenantId}
            </if>
            <if test="delFlag != null">
                and del_flag = #{delFlag}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insertOne" keyProperty="id" useGeneratedKeys="true">
        insert into t_division_account_battery_membercard(division_account_id, battery_membercard_id, tenant_id, del_flag, create_time, update_time)
        values (#{divisionAccountId}, #{batteryMembercardId}, #{tenantId}, #{delFlag}, #{createTime}, #{updateTime})
    </insert>

    <insert id="batchInsert" >
        insert into t_division_account_battery_membercard(division_account_id, battery_membercard_id, tenant_id, del_flag, create_time, update_time) values
        <foreach item="item" index="index" collection="list" separator=",">
            (#{item.divisionAccountId}, #{item.batteryMembercardId}, #{item.tenantId}, #{item.delFlag}, #{item.createTime}, #{item.updateTime})
        </foreach>
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update t_division_account_battery_membercard
        <set>
            <if test="divisionAccountId != null">
                division_account_id = #{divisionAccountId},
            </if>
            <if test="batteryMembercardId != null">
                battery_membercard_id = #{batteryMembercardId},
            </if>
            <if test="tenantId != null">
                tenant_id = #{tenantId},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from t_division_account_battery_membercard where id = #{id}
    </delete>


    <delete id="deleteByDivisionAccountId">
        delete from t_division_account_battery_membercard where division_account_id = #{divisionAccountId}
    </delete>

</mapper>
