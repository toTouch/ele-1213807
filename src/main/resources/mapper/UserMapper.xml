<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiliulou.electricity.mapper.UserMapper">

	<!-- 基础字段 -->
	<sql id="selectUser">
       	select   uid, phone, login_pwd, salt, avatar, name, gender, del_flag, lock_flag, user_type, create_time, update_time, lang, city, province, address, cid, ref_id, tenant_id, data_type, source        from t_user
    </sql>
	<update id="removeById">
		update t_user set del_flag = 1, update_time = #{updateTime} where uid = #{uid}
	</update>
	
	<!--查询单个-->
	<select id="selectById" resultType="com.xiliulou.electricity.entity.User">
		<include refid="selectUser"/>
		where uid = #{uid}
	</select>

	<select id="queryByUserName" resultType="com.xiliulou.electricity.entity.User">
		<include refid="selectUser"/>
		where binary name = #{username} and del_flag =0
	</select>

	<!--通过主键修改数据-->
	<update id="updateUserByUid">
		update t_user
		<set>
			<if test="tenantId != null">
				tenant_id = #{tenantId},
			</if>
			<if test="phone != null">
				phone = #{phone},
			</if>
			<if test="name != null">
				name = #{name},
			</if>
			<if test="gender != null">
				gender = #{gender},
			</if>
			<if test="source != null">
				source = #{source},
			</if>
			<if test="refId != null">
				ref_id = #{refId},
			</if>
			<if test="delFlag != null">
				del_flag = #{delFlag},
			</if>
			<if test="createTime != null">
				create_time = #{createTime},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>
		</set>
		where uid = #{uid}
	</update>
	
	<select id="search" resultType="com.xiliulou.electricity.vo.UserSearchVO">
		select uid, name
		from t_user
		<where>
			del_flag = 0 and user_type=1
			<if test="uid != null">
				and uid = #{uid}
			</if>
			<if test="name != null and name != '' ">
				and name like concat('%',#{name},'%')
			</if>
			<if test="tenantId != null">
				and tenant_id = #{tenantId}
			</if>
		</where>
		order by uid desc
		limit #{offset}, #{size}
	</select>

	<select id="queryListUserByCriteria" resultType="com.xiliulou.electricity.entity.User">
		select uid, phone, avatar, name, gender, del_flag, lock_flag, user_type, create_time, update_time,
		city,province,address,cid,ref_id,lang,tenant_id,data_type
		from t_user
		<where>
			del_flag = 0
			<if test="uid != null">
				and uid = #{uid}
			</if>
			<if test="name != null and name != '' ">
				and name like concat('%',#{name},'%')
			</if>
			<if test="type != null and type !=-1">
				and user_type = #{type}
			</if>
			<if test="type != null and type ==-1">
				and user_type not in (11, 12, 13, 14)
			</if>
			<if test="phone != null and phone != ''">
				and phone=#{phone}
			</if>
			<if test="startTime != null">
				and create_time &gt;=#{startTime}
			</if>
			<if test="endTime != null">
				and create_time &lt;=#{endTime}
			</if>
			<if test="tenantId != null">
				and tenant_id = #{tenantId}
			</if>
		</where>
		order by create_time desc
		limit #{offset}, #{size}
	</select>


	<select id="queryCount" resultType="java.lang.Integer">
		select COUNT(1)
		from t_user
		<where>
			del_flag = 0
			<if test="uid != null">
				and uid = #{uid}
			</if>
			<if test="name != null and name != '' ">
				and name like concat('%',#{name},'%')
			</if>
			<if test="type != null and type !=-1">
				and user_type = #{type}
			</if>
			<if test="type != null and type ==-1">
				and user_type not in (11, 12, 13, 14)
			</if>
			<if test="phone != null and phone != ''">
				and phone=#{phone}
			</if>
			<if test="startTime != null">
				and create_time &gt;=#{startTime}
			</if>
			<if test="endTime != null">
				and create_time &lt;=#{endTime}
			</if>
			<if test="tenantId != null">
				and tenant_id = #{tenantId}
			</if>
		</where>
	</select>

	<!--更新用户来源-->
	<update id="updateUserSource">
		update t_user
		<set>
			<if test="source != null">
				source = #{source},
			</if>
			<if test="refId != null">
				ref_id = #{refId},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>
		</set>
		where uid = #{uid} and del_flag =0 and tenant_id = #{tenantId}
	</update>


	<select id="selectUserSourceByPage" resultType="com.xiliulou.electricity.vo.UserSourceVO">
		select
		tu.uid,
		tu.phone,
		tu.source,
		tu.ref_id as electricityCabinetId,
		tu.tenant_id,
		tui.create_time,
		tui.update_time,
		tui.name,
		tui.franchisee_id

		from t_user tu left join t_user_info tui on tu.uid=tui.uid
		<where>
			tu.del_flag = 0
			<if test="uid != null">
				and tu.uid = #{uid}
			</if>
			<if test="source != null">
				and tu.source = #{source}
			</if>
			<if test="name != null and name != '' ">
				and tui.name like concat('%',#{name},'%')
			</if>
			<if test="phone != null and phone != ''">
				and tu.phone=#{phone}
			</if>
			<if test="franchiseeId != null">
				and tui.franchisee_id=#{franchiseeId}
			</if>
			<if test="electricityCabinetId != null">
				and tu.ref_id=#{electricityCabinetId}
			</if>
			<if test="tenantId != null">
				and tui.tenant_id = #{tenantId}
			</if>
			<if test="startTime != null">
				and tui.create_time &gt;=#{startTime}
			</if>
			<if test="endTime != null">
				and tui.create_time &lt;=#{endTime}
			</if>
			<if test="electricityCabinetIds != null and electricityCabinetIds.size > 0">
				and tu.ref_id in
				<foreach collection="electricityCabinetIds" item="id" index="index" open="(" close=")" separator=",">
					#{id}
				</foreach>
			</if>
			<if test="franchiseeIds != null and franchiseeIds.size()>0">
				and tui.franchisee_id in
				<foreach collection="franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
					#{id}
				</foreach>
			</if>
			<if test="storeIds != null and storeIds.size()>0">
				and tui.store_id in
				<foreach collection="storeIds" item="id" index="index" open="(" close=")" separator=",">
					#{id}
				</foreach>
			</if>
		</where>
		order by tui.create_time desc
		limit #{offset}, #{size}
	</select>


	<select id="selectUserSourcePageCount" resultType="java.lang.Integer">
		select COUNT(1)
		from t_user tu  left join t_user_info tui on tu.uid=tui.uid
		<where>
			tu.del_flag = 0
			<if test="uid != null">
				and tu.uid = #{uid}
			</if>
			<if test="source != null">
				and tu.source = #{source}
			</if>
			<if test="name != null and name != '' ">
				and tui.name like concat('%',#{name},'%')
			</if>
			<if test="phone != null and phone != ''">
				and tu.phone=#{phone}
			</if>
			<if test="franchiseeId != null">
				and tui.franchisee_id=#{franchiseeId}
			</if>
			<if test="electricityCabinetId != null">
				and tu.ref_id=#{electricityCabinetId}
			</if>
			<if test="tenantId != null">
				and tui.tenant_id = #{tenantId}
			</if>
			<if test="startTime != null">
				and tui.create_time &gt;=#{startTime}
			</if>
			<if test="endTime != null">
				and tui.create_time &lt;=#{endTime}
			</if>
			<if test="electricityCabinetIds != null and electricityCabinetIds.size > 0">
				and tu.ref_id in
				<foreach collection="electricityCabinetIds" item="id" index="index" open="(" close=")" separator=",">
					#{id}
				</foreach>
			</if>
			<if test="franchiseeIds != null and franchiseeIds.size()>0">
				and tui.franchisee_id in
				<foreach collection="franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
					#{id}
				</foreach>
			</if>
			<if test="storeIds != null and storeIds.size()>0">
				and tui.store_id in
				<foreach collection="storeIds" item="id" index="index" open="(" close=")" separator=",">
					#{id}
				</foreach>
			</if>
		</where>
	</select>
	<select id="checkMerchantExist" resultType="com.xiliulou.electricity.entity.User">
		SELECT
			name,
			phone,
			uid
		FROM
			t_user
		WHERE
		  del_flag = 0
		  and phone = #{phone}
		  
		  AND user_type = #{userType}
		  
		  <if test="tenantId != null">
			  AND tenant_id = #{tenantId}
		  </if>
		  
		  <if test="uid != null">
			  and uid != #{uid}
		  </if>
	</select>
	
	<select id="queryListByUidList" resultType="com.xiliulou.electricity.entity.User">
		SELECT name, phone, uid FROM t_user WHERE del_flag = 0 and tenant_id = #{tenantId} AND uid IN
		<foreach collection="uidList" separator="," open="(" close=")" item="uid">
			#{uid}
		</foreach>
	</select>
	
	<select id="selectByUid" resultType="com.xiliulou.electricity.entity.User">
		<include refid="selectUser"/>
		where del_flag = 0 and uid = #{uid}
	</select>
	
	<select id="selectListByPhones" resultType="com.xiliulou.electricity.entity.User">
		<include refid="selectUser"/>
		where del_flag = 0 and tenant_id = #{tenantId}
		<if test="type != null and type !=-1">
			and user_type = #{type}
		</if>
		<if test="phoneList != null and phoneList.size() > 0">
			and phone in
			<foreach collection="phoneList" separator="," open="(" close=")" item="phone">
				#{phone}
			</foreach>
		</if>
	</select>
    <select id="selectListForSearch" resultType="com.xiliulou.electricity.vo.UserSearchVO">
		select uid, name
		from t_user
		<where>
			del_flag = 0
			<if test="userTypeList != null and userTypeList.size() > 0">
				and user_type in
				<foreach collection="userTypeList" item="userType" open="(" close=")" separator=",">
					#{userType}
				</foreach>
			</if>
		
			<if test="uid != null">
				and uid = #{uid}
			</if>
			<if test="name != null and name != '' ">
				and name like concat('%',#{name},'%')
			</if>
			<if test="tenantId != null">
				and tenant_id = #{tenantId}
			</if>
		</where>
		order by uid desc
		limit #{offset}, #{size}
	</select>
    
    <update id="updatePhoneByUid">
		update t_user set phone=#{newPhone},update_time=#{updateTime} where uid=#{uid} and tenant_id = #{tenantId}
	</update>
	
	<update id="updateMerchantUser">
		update t_user
		<set>
			<if test="phone != null">
				phone = #{phone},
			</if>
			<if test="name != null">
				name = #{name},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>
		    <if test="lockFlag != null">
				lock_flag = #{lockFlag},
			</if>
		</set>
		where uid = #{uid}
	</update>
	
    <update id="batchRemoveByUidList">
		update t_user set del_flag = 1, update_time = #{updateTime}
		    where uid in
		    <foreach collection="uidList" item="uid" close=")" open="(" separator=",">
				#{uid}
			</foreach>
		    and del_flag = 0
	</update>
	
</mapper>
