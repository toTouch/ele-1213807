<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiliulou.electricity.mapper.merchant.MerchantLevelMapper">
    
    <resultMap type="com.xiliulou.electricity.entity.merchant.MerchantLevel" id="MerchantLevelMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="level" column="level" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="rule" column="rule" jdbcType="VARCHAR"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
        <result property="tenantId" column="tenant_id" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="INTEGER"/>
    </resultMap>
    
    <!--查询单个-->
    <select id="selectById" resultMap="MerchantLevelMap">
        select
            id, level, name, rule, del_flag, tenant_id, create_time, update_time
        from t_merchant_level
        where id = #{id}
    </select>
    
    <select id="selectNextByMerchantLevel" resultMap="MerchantLevelMap">
        select
            id, level, name, rule, del_flag, tenant_id, create_time, update_time
        from t_merchant_level
        where level &lt; #{level} and tenant_id = #{tenantId} order by level desc limit 1
    </select>
    
    <select id="selectLastByMerchantLevel" resultMap="MerchantLevelMap">
        select
            id, level, name, rule, del_flag, tenant_id, create_time, update_time
        from t_merchant_level
        where level &gt; #{level} and tenant_id = #{tenantId} order by level limit 1
    </select>
    
    <select id="selectByMerchantLevelAndTenantId" resultMap="MerchantLevelMap">
        select
            id, level, name, rule, del_flag, tenant_id, create_time, update_time
        from t_merchant_level
        where level = #{level} and tenant_id = #{tenantId} order by id limit 1
    </select>
    
    <select id="existsLevelName" resultType="integer">
        select 1 from t_merchant_level
        where name = #{name} and tenant_id = #{tenantId} limit 1
    </select>
    
    <select id="selectByTenantId" resultMap="MerchantLevelMap">
        select
            id, level, name, rule
        from t_merchant_level
        where tenant_id = #{tenantId} order by id
    </select>
    <select id="queryListByIdList" resultType="com.xiliulou.electricity.entity.merchant.MerchantLevel">
        select
            id, level, name, rule
        from t_merchant_level
        <where>
            del_flag = 0
            and id in
          <foreach collection="idList" item="id" close=")" open="(" separator=",">
            #{id}
          </foreach>
        </where>
    </select>
    
    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into t_merchant_level(level, name, rule, del_flag, tenant_id, create_time, update_time)
        values (#{level}, #{name}, #{rule}, #{delFlag}, #{tenantId}, #{createTime}, #{updateTime})
    </insert>
    
    <insert id="batchInsert" >
        insert into t_merchant_level(level, name, rule, del_flag, tenant_id, create_time, update_time)
        values
        <foreach item="item" index="index" collection="list" separator=",">
            (#{item.level}, #{item.name}, #{item.rule}, #{item.delFlag}, #{item.tenantId}, #{item.createTime}, #{item.updateTime})
        </foreach>
    </insert>
    
    <!--通过主键修改数据-->
    <update id="updateById">
        update t_merchant_level
        <set>
            <if test="level != null and level != ''">
                level = #{level},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="rule != null and rule != ''">
                rule = #{rule},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
            <if test="tenantId != null">
                tenant_id = #{tenantId},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>
    
    <!--通过主键删除-->
    <delete id="deleteById">
        delete from t_merchant_level where id = #{id}
    </delete>

</mapper>
