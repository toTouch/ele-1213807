<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiliulou.electricity.mapper.car.CarRentalOrderMapper">

    <resultMap type="com.xiliulou.electricity.entity.car.CarRentalOrderPo" id="entityMap">
        <!--基础映射 -->
        <result property="id" column="id" jdbcType="BIGINT" />
        <result property="tenantId" column="tenant_id" jdbcType="INTEGER" />
        <result property="franchiseeId" column="franchisee_id" jdbcType="INTEGER" />
        <result property="storeId" column="store_id" jdbcType="INTEGER" />
        <result property="createUid" column="create_uid" jdbcType="BIGINT" />
        <result property="updateUid" column="update_uid" jdbcType="BIGINT" />
        <result property="createTime" column="create_time" jdbcType="BIGINT" />
        <result property="updateTime" column="update_time" jdbcType="BIGINT" />
        <result property="delFlag" column="del_flag" jdbcType="INTEGER" />
        <!-- 私有映射 -->
        <result property="uid" column="uid" jdbcType="BIGINT" />
        <result property="orderNo" column="order_no" jdbcType="VARCHAR" />
        <result property="rentalPackageOrderNo" column="rental_package_order_no" jdbcType="VARCHAR" />
        <result property="type" column="type" jdbcType="INTEGER" />
        <result property="carModelId" column="car_model_id" jdbcType="INTEGER" />
        <result property="carSn" column="car_sn" jdbcType="VARCHAR" />
        <result property="payType" column="pay_type" jdbcType="INTEGER" />
        <result property="rentalState" column="rental_state" jdbcType="INTEGER" />
        <result property="auditTime" column="audit_time" jdbcType="BIGINT" />
        <result property="remark" column="remark" jdbcType="VARCHAR" />
    </resultMap>

    <!-- 表名 -->
    <sql id="table_name">`t_car_rental_order`</sql>

    <!-- 基础字段 -->
    <sql id="basic_field">
        `id`, `tenant_id`, `franchisee_id`, `store_id`, `create_uid`, `update_uid`, `create_time`, `update_time`, `del_flag`,
    </sql>

    <!-- 私有字段 -->
    <sql id="private_field">
        `uid`, `order_no`, `rental_package_order_no`, `type`, `car_model_id`, `car_sn`, `pay_type`, `rental_state`, `audit_time`, `remark`
    </sql>

    <!-- 全部字段 -->
    <sql id="all_field">
        <include refid="basic_field" />
        <include refid="private_field" />
    </sql>

    <!-- where 查询条件 -->
    <sql id="where_field">
        <if test=" tenantId != null "> AND `tenant_id` = #{tenantId} </if>
        <if test=" franchiseeId != null "> AND `franchisee_id` = #{franchiseeId} </if>
        <if test=" storeId != null "> AND `store_id` = #{storeId} </if>
        <if test=" orderNo != null and orderNo != '' "> AND `order_no` = #{orderNo} </if>
        <if test=" uid != null "> AND `uid` = #{uid} </if>
        <if test=" type != null "> AND `type` = #{type} </if>
        <if test=" carSn != null "> AND `car_sn` LIKE CONCAT('%', #{carSn}, '%') </if>
        <if test=" rentalState != null "> AND `rental_state` = #{rentalState} </if>
        <if test=" beginCreateTime != null and endCreateTime != null "> AND `create_time` BETWEEN #{beginCreateTime} AND #{endCreateTime} </if>
        <if test=" franchiseeIdList != null and franchiseeIdList.size > 0 ">
            AND `franchisee_id` IN
            <foreach collection="franchiseeIdList" item="franchiseeId" open="(" close=")" separator=",">
                #{franchiseeId}
            </foreach>
        </if>
        <if test=" storeIdList != null and storeIdList.size > 0 ">
            AND `store_id` IN
            <foreach collection="storeIdList" item="storeId" open="(" close=")" separator=",">
                #{storeId}
            </foreach>
        </if>
    </sql>

    <!-- 条件新增字段 -->
    <sql id="insert_field">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test=" tenantId != null "> `tenant_id`, </if>
            <if test=" franchiseeId != null "> `franchisee_id`, </if>
            <if test=" storeId != null "> `store_id`, </if>
            <if test=" createUid != null "> `create_uid`, </if>
            <if test=" updateUid != null "> `update_uid`, </if>
            <if test=" createTime != null "> `create_time`, </if>
            <if test=" updateTime != null "> `update_time`, </if>
            <if test=" delFlag != null "> `del_flag`, </if>
            <if test=" uid != null "> `uid`, </if>
            <if test=" orderNo != null and orderNo != '' "> `order_no`, </if>
            <if test=" rentalPackageOrderNo != null and rentalPackageOrderNo != '' "> `rental_package_order_no`, </if>
            <if test=" type != null "> `type`, </if>
            <if test=" carModelId != null "> `car_model_id`, </if>
            <if test=" carSn != null and carSn != '' "> `car_sn`, </if>
            <if test=" payType != null "> `pay_type`, </if>
            <if test=" rentalState != null "> `rental_state`, </if>
            <if test=" auditTime != null "> `audit_time`, </if>
            <if test=" remark != null and remark != '' "> `remark`, </if>
        </trim>
    </sql>
    <!-- 条件新增字段值 -->
    <sql id="insert_value">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test=" tenantId != null "> #{tenantId}, </if>
            <if test=" franchiseeId != null "> #{franchiseeId}, </if>
            <if test=" storeId != null "> #{storeId}, </if>
            <if test=" createUid != null "> #{createUid}, </if>
            <if test=" updateUid != null "> #{updateUid}, </if>
            <if test=" createTime != null "> #{createTime}, </if>
            <if test=" updateTime != null "> #{updateTime}, </if>
            <if test=" delFlag != null "> #{delFlag}, </if>
            <if test=" uid != null "> #{uid}, </if>
            <if test=" orderNo != null and orderNo != '' "> #{orderNo}, </if>
            <if test=" rentalPackageOrderNo != null and rentalPackageOrderNo != '' "> #{rentalPackageOrderNo}, </if>
            <if test=" type != null "> #{type}, </if>
            <if test=" carModelId != null "> #{carModelId}, </if>
            <if test=" carSn != null and carSn != '' "> #{carSn}, </if>
            <if test=" payType != null "> #{payType}, </if>
            <if test=" rentalState != null "> #{rentalState}, </if>
            <if test=" auditTime != null "> #{auditTime}, </if>
            <if test=" remark != null and remark != '' "> #{remark}, </if>
        </trim>
    </sql>

    <!-- 根据ID进行数据更新 -->
    <update id="updateById">
        UPDATE <include refid="table_name" />
        <set>
            `update_time` = #{updateTime}
            <if test=" updateUid != null "> , `update_uid` = #{updateUid} </if>
            <if test=" rentalState != null "> , `rental_state` = #{rentalState} </if>
            <if test=" auditTime != null "> , `audit_time` = #{auditTime} </if>
            <if test=" remark != null and remark != '' "> , `remark` = #{remark} </if>
        </set>
        <where>
            `id` = #{id}
        </where>
    </update>

    <!-- 据用户UID、车辆SN码、状态查询最后一条数据 -->
    <select id="selectLastByUidAndSnAndState" resultMap="entityMap">
        SELECT <include refid="all_field" /> FROM <include refid="table_name" />
        <where>
            `del_flag` = 0 AND `tenant_id` = #{tenantId} AND `uid` = #{uid} AND `type` = #{type} AND `rental_state` = #{rentalState} AND `car_sn` = #{carSn}
        </where>
        ORDER BY `id` DESC LIMIT 1
    </select>

    <!-- 条件查询列表 -->
    <select id="list" parameterType="com.xiliulou.electricity.model.car.query.CarRentalOrderQryModel" resultMap="entityMap">
        SELECT <include refid="all_field" /> FROM <include refid="table_name" />
        <where>
            `del_flag` = 0
            <include refid="where_field" />
        </where>
    </select>

    <!-- 条件查询分页 -->
    <select id="page" parameterType="com.xiliulou.electricity.model.car.query.CarRentalOrderQryModel" resultMap="entityMap">
        SELECT <include refid="all_field" /> FROM <include refid="table_name" />
        <where>
            `del_flag` = 0
            <include refid="where_field" />
        </where>
        ORDER BY `create_time` DESC
        LIMIT #{offset}, #{size}
    </select>

    <!-- 条件查询总数 -->
    <select id="count" parameterType="com.xiliulou.electricity.model.car.query.CarRentalOrderQryModel" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM <include refid="table_name" />
        <where>
            `del_flag` = 0
            <include refid="where_field" />
        </where>
    </select>

    <!-- 根据订单编码查询 -->
    <select id="selectByOrderNo" resultMap="entityMap">
        SELECT <include refid="all_field" /> FROM <include refid="table_name" />
        <where>
            `order_no` = #{orderNo}
        </where>
    </select>

    <!-- 根据ID查询 -->
    <select id="selectById" resultMap="entityMap">
        SELECT <include refid="all_field" /> FROM <include refid="table_name" />
        <where>
            `id` = #{id}
        </where>
    </select>

    <!-- 条件新增 -->
    <insert id="insert" parameterType="com.xiliulou.electricity.entity.car.CarRentalOrderPo" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO <include refid="table_name" /> <include refid="insert_field" /> VALUES <include refid="insert_value" />
    </insert>

</mapper>
