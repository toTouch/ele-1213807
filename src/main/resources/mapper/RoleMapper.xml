<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiliulou.electricity.mapper.RoleMapper">

    <resultMap type="com.xiliulou.electricity.entity.Role" id="RoleMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="code" column="code" jdbcType="VARCHAR"/>
        <result property="desc" column="desc" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="RoleMap">
        select
          id, name, code, `desc`, create_time, update_time
        from electricity.t_role
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="RoleMap">
        select
          id, name, code, `desc`, create_time, update_time
        from electricity.t_role
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="RoleMap">
        select
          id, name, code, `desc`, create_time, update_time
        from electricity.t_role
        order by create_time desc
    </select>

    <!--新增所有列-->
    <insert id="insertOne" keyProperty="id" useGeneratedKeys="true">
        insert into electricity.t_role(name, code, `desc`, create_time, update_time)
        values (#{name}, #{code}, #{desc}, #{createTime}, #{updateTime})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update electricity.t_role
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="code != null and code != ''">
                code = #{code},
            </if>
            <if test="`desc` != null and `desc` != ''">
                `desc` = #{desc},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from electricity.t_role where id = #{id}
    </delete>

    <select id="queryListByCondition" resultMap="RoleMap">
         select
          id, name, code, `desc`, create_time, update_time
        from electricity.t_role
        order by create_time desc
        limit #{offset},#{size}
    </select>

    <select id="queryByRoleIds" resultMap="RoleMap">
           select
          id, name, code, `desc`, create_time, update_time
        from electricity.t_role
        where id in
         <foreach collection="list" close=")" open="(" item="r" separator=",">
             #{r}
         </foreach>

    </select>

</mapper>