<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiliulou.electricity.mapper.EleRefundOrderMapper">
    
    <resultMap type="com.xiliulou.electricity.entity.EleRefundOrder" id="eleRefundOrderMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="refundOrderNo" column="refund_order_no" jdbcType="VARCHAR"/>
        <result property="orderId" column="order_id" jdbcType="VARCHAR"/>
        <result property="payAmount" column="pay_amount" jdbcType="VARCHAR"/>
        <result property="refundAmount" column="refund_amount" jdbcType="INTEGER"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="errMsg" column="err_msg" jdbcType="VARCHAR"/>
        <result property="tenantId" column="tenant_id" jdbcType="INTEGER"/>
        <result property="franchiseeId" column="franchisee_id" jdbcType="INTEGER"/>
        <result property="memberCardOweNumber" column="member_card_owe_number" jdbcType="INTEGER"/>
        <result property="refundOrderType" column="refund_order_type" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="INTEGER"/>
    </resultMap>
    
    <!-- 基础字段信息获取 -->
    <sql id="selectEleRefundOrder">
        select id,
               refund_order_no,
               order_id,
               pay_amount,
               refund_amount,
               status,
               err_msg,
               tenant_id,
               member_card_owe_number,
               refund_order_type,
               franchisee_id,
               store_id,
               create_time,
               update_time
        from t_ele_refund_order
    </sql>
    
    <update id="update">
        update t_ele_refund_order set status = #{status},update_time = #{updateTime} where id = #{id}
    </update>
    <update id="updateRefundAmountById">
        update t_ele_refund_order set refund_amount = #{refundAmount}, update_time = #{updateTime} where id = #{id}
    </update>
    
    <!--查询指定行数据-->
    <select id="queryList" resultType="com.xiliulou.electricity.vo.EleRefundOrderVO">
        select
        tero.id as id, tero.refund_order_no as refundOrderNo, tero.order_id as orderId, tero.pay_amount as payAmount,
        tero.refund_amount as refundAmount, tero.status as status, tero.err_msg as errMsg,
        tero.create_time as createTime, tero.update_time as updateTime ,tero.member_card_owe_number as
        memberCardOweNumber,tedo.uid as uid,tedo.name as name,tedo.phone as phone,
        tero.refund_order_type as refundOrderType, tero.pay_type as payType, tedo.order_type as orderType, tedo.franchisee_id,
        tero.payment_channel as paymentChannel
        from t_ele_refund_order as tero
        left join t_ele_deposit_order as tedo on tero.order_id= tedo.order_id
        <where>
            <if test="query.orderId != null and query.orderId != ''">
                and tero.order_id = #{query.orderId}
            </if>
            <if test="query.status != null">
                and tero.status = #{query.status}
            </if>
            <if test="query.beginTime != null">
                and tero.create_time &gt;=#{query.beginTime}
            </if>
            <if test="query.endTime != null">
                and tero.create_time &lt;=#{query.endTime}
            </if>
            <if test="query.tenantId != null">
                and tero.tenant_id = #{query.tenantId}
            </if>
            <if test="query.payType != null">
                and tero.pay_type = #{query.payType}
            </if>
            <if test="query.uid != null">
                and tedo.uid = #{query.uid}
            </if>
            <if test="query.refundOrderType != null">
                and tero.refund_order_type = #{query.refundOrderType}
            </if>
            <if test="query.phone != null and query.phone != ''">
                and tedo.phone = #{query.phone}
            </if>
            <if test="query.orderType != null">
                and tedo.order_type = #{query.orderType}
            </if>
            <if test="query.refundOrderNo != null and query.refundOrderNo != ''">
                and tero.refund_order_no = #{query.refundOrderNo}
            </if>
            <if test="query.storeIds != null">
                and tedo.store_id in
                <foreach collection="query.storeIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="query.franchiseeIds != null">
                and tedo.franchisee_id in
                <foreach collection="query.franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="query.paymentChannel != null and query.paymentChannel != ''">
                and tero.payment_channel = #{query.paymentChannel}
            </if>
        </where>
        order by tero.update_time desc
        limit #{query.offset}, #{query.size}
    </select>
    
    <select id="queryCount" resultType="java.lang.Integer">
        select COUNT(1)
        from t_ele_refund_order tero left join t_ele_deposit_order as tedo on tero.order_id= tedo.order_id
        <where>
            <if test="query.orderId != null and query.orderId != ''">
                and tero.order_id = #{query.orderId}
            </if>
            <if test="query.phone != null and query.phone != ''">
                and tedo.phone = #{query.phone}
            </if>
            <if test="query.status != null">
                and tero.status = #{query.status}
            </if>
            <if test="query.statuses != null and query.statuses.size > 0">
                and tero.status in
                    <foreach collection="query.statuses" open="(" separator="," close=")" item="status">
                        #{status}
                    </foreach>
            </if>
            <if test="query.uid != null">
                and tedo.uid = #{query.uid}
            </if>
            <if test="query.refundOrderType != null">
                and tero.refund_order_type = #{query.refundOrderType}
            </if>
            <if test="query.beginTime != null">
                and tero.create_time &gt;=#{query.beginTime}
            </if>
            <if test="query.endTime != null">
                and tero.create_time &lt;=#{query.endTime}
            </if>
            <if test="query.tenantId != null">
                and tero.tenant_id = #{query.tenantId}
            </if>
            <if test="query.payType != null">
                and tero.pay_type = #{query.payType}
            </if>
            <if test="query.refundOrderNo != null and query.refundOrderNo != ''">
                and tero.refund_order_no = #{query.refundOrderNo}
            </if>
            <if test="query.orderType != null">
                and tedo.order_type = #{query.orderType}
            </if>
            <if test="query.storeIds != null">
                and tedo.store_id in
                <foreach collection="query.storeIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="query.franchiseeIds != null">
                and tedo.franchisee_id in
                <foreach collection="query.franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="query.paymentChannel != null and query.paymentChannel != ''">
                and tero.payment_channel = #{query.paymentChannel}
            </if>
        </where>
    </select>
    
    <select id="queryUserInfoId" resultType="java.lang.Long">
        select tu.id
        from t_ele_deposit_order tedo
                 left join t_ele_refund_order tero on tedo.order_id = tero.order_id
                 left join t_user_info tu on tu.uid = tedo.uid
        where tero.refund_order_no = #{refundOrderNo}
    </select>
    
    <select id="queryTurnOver" resultType="decimal">
        select ifnull(sum(pay_amount),0) from t_ele_refund_order
        where status=4
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
    </select>
    
    <select id="queryTurnOverByTime" resultType="decimal">
        select sum(refund_amount) from t_ele_refund_order tero left join t_ele_deposit_order tedo on tero.order_id=tedo.order_id
        where tero.status=4
        <if test="tenantId != null">
            and tero.tenant_id = #{tenantId}
        </if>
        <if test="todayStartTime != null">
            and tero.create_time &gt;=#{todayStartTime}
        </if>
        <if test="refundOrderType != null">
            and tero.refund_order_type = #{refundOrderType}
        </if>
        <if test="franchiseeIds != null">
            and tedo.franchisee_id in
            <foreach collection="franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="payType != null">
            and tedo.pay_type = #{payType}
        </if>
    </select>
    
    <select id="queryCarRefundTurnOverByTime" resultType="decimal">
        select sum(refund_amount) from t_ele_refund_order tero left join t_car_deposit_order tedo on tero.order_id=tedo.order_id
        where tero.status=4
        <if test="tenantId != null">
            and tero.tenant_id = #{tenantId}
        </if>
        <if test="todayStartTime != null">
            and tero.create_time &gt;=#{todayStartTime}
        </if>
        <if test="refundOrderType != null">
            and tero.refund_order_type = #{refundOrderType}
        </if>
        <if test="franchiseeIds != null">
            and tedo.franchisee_id in
            <foreach collection="franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="payType != null">
            and pay_type = #{payType}
        </if>
    </select>
    
    <select id="queryRefundTime" resultType="long">
        select update_time
        from t_ele_refund_order
        where order_id = #{orderId}
          and refund_order_type = #{refundOrderType}
          and status = 4;
    </select>
    
    
    <select id="selectBatteryFreeDepositRefundingOrder" resultType="com.xiliulou.electricity.entity.EleRefundOrder">
        select ero.id,
               ero.order_id,
               ero.tenant_id
        from t_ele_refund_order ero
                 left join t_ele_deposit_order edo on ero.order_id = edo.order_id
        WHERE edo.pay_type = 2
          and ero.status = 3
          and ero.refund_order_type = 0 limit #{offset}
            , #{size}
    </select>
    
    
    <select id="selectCarFreeDepositRefundingOrder" resultType="com.xiliulou.electricity.entity.EleRefundOrder">
        select ero.id,
               ero.order_id,
               ero.tenant_id
        from t_ele_refund_order ero
                 left join t_car_deposit_order cdo on ero.order_id = cdo.order_id
        WHERE cdo.pay_type = 2
          and ero.status = 3
          and ero.refund_order_type = 1 limit #{offset}
            , #{size}
    </select>
    
    <select id="selectLatestRefundDepositOrder" resultMap="eleRefundOrderMap">
        <include refid="selectEleRefundOrder"/>
        where order_id = #{paymentOrderNo}
        ORDER BY id DESC limit 1
    </select>
    
    <select id="existByOrderIdAndStatus" resultType="java.lang.Integer">
        select 1 from t_ele_refund_order
        <where>
            order_id = #{orderId} and status in
            <foreach collection="statusList" item="status" open="(" close=")" separator=",">
                #{status}
            </foreach>
        </where>
    </select>
    
    <select id="existsRefundOrderByUid" resultType="java.lang.Integer">
        select  1 from t_ele_refund_order  ero  left join t_ele_deposit_order edo on ero.order_id=edo.order_id
        WHERE edo.uid = #{uid} and ero.status=4
        <if test="lostUserFirstRebateTime != null">
            and ero.create_time > #{lostUserFirstRebateTime}
        </if>
        limit 1
    </select>
    
    <select id="selectLastByOrderId" resultType="com.xiliulou.electricity.entity.EleRefundOrder">
        select
            refund_order_no,
            order_id,
            pay_amount,
            refund_amount,
            status ,
            err_msg,
            create_time,
            update_time,
            tenant_id,
            refund_order_type,
            franchisee_id,
            store_id,
            member_card_owe_number
        from t_ele_refund_order
        where
            status=4
          and order_id= #{orderId}
        ORDER BY id DESC limit 1
    </select>
    
    <sql id="column">
        tero.id as id, tero.refund_order_no as refundOrderNo, tero.order_id as orderId, tero.pay_amount as payAmount,
        tero.refund_amount as refundAmount, tero.status as status, tero.err_msg as errMsg,
        tero.create_time as createTime, tero.update_time as updateTime ,tero.member_card_owe_number as
        memberCardOweNumber,tedo.uid as uid,tedo.name as name,tedo.phone as phone,
        tero.refund_order_type as refundOrderType, tero.pay_type as payType, tedo.order_type as orderType,tero.tenant_id
    </sql>
    
    <sql id="pageFilter">
        <where>
            <if test="query.orderId != null and query.orderId != ''">
                and tero.order_id = #{query.orderId}
            </if>
            <if test="query.status != null">
                and tero.status = #{query.status}
            </if>
            <if test="query.beginTime != null">
                and tero.create_time &gt;=#{query.beginTime}
            </if>
            <if test="query.endTime != null">
                and tero.create_time &lt;=#{query.endTime}
            </if>
            <if test="query.tenantId != null">
                and tero.tenant_id = #{query.tenantId}
            </if>
            <if test="query.payType != null">
                and tedo.pay_type = #{query.payType}
            </if>
            <if test="query.orderType != null">
                and tedo.order_type = #{query.orderType}
            </if>
            <if test="query.uid != null">
                and tedo.uid = #{query.uid}
            </if>
            <if test="query.refundOrderType != null">
                and tero.refund_order_type = #{query.refundOrderType}
            </if>
            <if test="query.phone != null and query.phone != ''">
                and tedo.phone = #{query.phone}
            </if>
            <if test="query.refundOrderNo != null and query.refundOrderNo != ''">
                and tero.refund_order_no = #{query.refundOrderNo}
            </if>
        
            <if test="query.storeIds != null">
                and tedo.store_id in
                <foreach collection="query.storeIds" item="id" index="index" open="(" close=")"  separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="query.franchiseeIds != null">
                and tedo.franchisee_id in
                <foreach collection="query.franchiseeIds" item="id" index="index" open="(" close=")"  separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </sql>
    
    <select id="selectListSuperAdminPage" resultType="com.xiliulou.electricity.vo.EleRefundOrderVO">
        select
        <include refid="column"/>
        from t_ele_refund_order as tero
        left join t_ele_deposit_order as tedo on tero.order_id= tedo.order_id
        <include refid="pageFilter"/>
        order by tero.update_time desc
        limit #{query.offset}, #{query.size}
    </select>
</mapper>
