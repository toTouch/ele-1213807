<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiliulou.electricity.mapper.StoreAmountMapper">


	<select id="queryList" resultType="com.xiliulou.electricity.entity.StoreAmount">
		select tsa.store_id,tsa.uid,tsa.create_time,tsa.total_income,tsa.balance,tsa.withdraw  from t_store_amount as tsa left join t_store as ts on ts.id=tsa.store_id
		where tsa.del_flag = 0
		<if test="storeName != null and storeName != ''">
			and ts.name = #{storeName}
		</if>
		<if test="storeId != null">
			and tsa.store_id =#{storeId}
		</if>
		<if test="startTime != null">
			and tsa.create_time &gt;= #{startTime}
		</if>
		<if test="endTime != null">
			and tsa.create_time &lt;= #{endTime}
		</if>
		<if test="tenantId != null">
			and tsa.tenant_id = #{tenantId}
		</if>
		<if test="storeIdList!=null and storeIdList!=''">
			and tsa.store_id in
			<foreach collection="storeIdList" item="id" index="index" open="(" close=")" separator=",">
				#{id}
			</foreach>
		</if>
		order by tsa.create_time desc
		limit #{offset}, #{size}
	</select>


	<select id="queryCount" resultType="java.lang.Integer">
		select COUNT(1) from t_store_amount as tsa left join t_store as ts on ts.id=tsa.store_id
		where tsa.del_flag = 0
		<if test="storeName != null and storeName != ''">
			and ts.name = #{storeName}
		</if>
		<if test="storeId != null">
			and tsa.store_id =#{storeId}
		</if>
		<if test="startTime != null">
			and tsa.create_time &gt;= #{startTime}
		</if>
		<if test="endTime != null">
			and tsa.create_time &lt;= #{endTime}
		</if>
		<if test="tenantId != null">
			and tsa.tenant_id = #{tenantId}
		</if>
		<if test="storeIdList!=null and storeIdList!=''">
			and tsa.store_id in
			<foreach collection="storeIdList" item="id" index="index" open="(" close=")" separator=",">
				#{id}
			</foreach>
		</if>
	</select>


	<!--通过主键修改数据-->
	<update id="updateIdEmpontent">
		update t_store_amount
		<set>
			<if test="fresh.balance != null">
				balance = #{fresh.balance},
			</if>
			<if test="fresh.updateTime != null">
				update_time = #{fresh.updateTime},
			</if>
		</set>
		where id = #{old.id}
		<if test="old.balance != null">
			and balance= #{old.balance}
		</if>
	</update>

	<update id="deleteByStoreId">
		update t_store_amount
		set del_flag = 1
		<where>
		   <if test="id != null">
			and store_id =#{id}
		   </if>
		</where>
	</update>


</mapper>
