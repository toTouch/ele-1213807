<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiliulou.electricity.mapper.UserAmountMapper">


	<select id="queryList" resultType="com.xiliulou.electricity.vo.UserAmountVO">
		select tua.id as id,tua.uid as uid,tui.name, tua.create_time as createTime,
		tua.update_time as updateTime,tua.total_income as totalIncome,
		tua.balance as balance,tua.withdraw as withdraw,tua.tenant_id as tenantId,
		tua.del_flg as delFlg,tui.phone as phone
		from t_user_amount as tua
		left join t_user_info as tui on tua.uid=tui.uid
		<where>
		<if test="tenantId != null">
			and tua.tenant_id = #{tenantId}
		</if>
		<if test="uid != null">
			and tui.uid = #{uid}
		</if>
		<if test="phone != null and phone != ''">
			and tui.phone = #{phone}
		</if>
			<if test="franchiseeIds != null and franchiseeIds.size()>0">
				and tui.franchisee_id in
				<foreach collection="franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
					#{id}
				</foreach>
			</if>
			<if test="storeIds != null and storeIds.size()>0">
				and tui.store_id in
				<foreach collection="storeIds" item="id" index="index" open="(" close=")" separator=",">
					#{id}
				</foreach>
			</if>
		</where>
		ORDER BY tua.create_time DESC
		limit #{offset}, #{size}
	</select>

	<select id="queryCount" resultType="java.lang.Integer">
		select count(1)
		from t_user_amount as tua
		left join t_user_info as tui on tua.uid=tui.uid
		<where>
			<if test="tenantId != null">
				and tua.tenant_id = #{tenantId}
			</if>
			<if test="uid != null">
				and tui.uid = #{uid}
			</if>
			<if test="phone != null and phone != ''">
				and tui.phone = #{phone}
			</if>
			<if test="franchiseeIds != null and franchiseeIds.size()>0">
				and tui.franchisee_id in
				<foreach collection="franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
					#{id}
				</foreach>
			</if>
			<if test="storeIds != null and storeIds.size()>0">
				and tui.store_id in
				<foreach collection="storeIds" item="id" index="index" open="(" close=")" separator=",">
					#{id}
				</foreach>
			</if>
		</where>
	</select>

	<update id="updateReduceIncome">
        update t_user_amount
		set balance =balance- #{income},
		withdraw=withdraw+ #{income}
		where uid = #{uid} and del_flg = 0
    </update>

	<update id="updateRollBackIncome">
        update t_user_amount
		set balance =balance+ #{income},
		withdraw=withdraw- #{income}
		where uid = #{uid} and del_flg = 0
    </update>
	
	<select id="selectList" resultType="com.xiliulou.electricity.entity.UserAmount">
		SELECT
			tua.id AS id,
			tua.uid AS uid,
			tua.create_time AS createTime,
			tua.update_time AS updateTime,
			tua.total_income AS totalIncome,
			tua.balance AS balance,
			tua.withdraw AS withdraw,
			tua.tenant_id AS tenantId,
			tua.del_flg AS delFlg
		FROM
		t_user_amount AS tua
		<where>
			tua.del_flg = 0
			<if test="query.tenantId != null">
				and tua.tenant_id = #{query.tenantId}
			</if>
			<if test="query.uidList != null and !query.uidList.isEmpty()">
				and tua.uid in
				<foreach collection="query.uidList" item="uid" separator="," open="(" close=")">
					#{uid}
				</foreach>
			</if>
		</where>
	</select>
</mapper>
