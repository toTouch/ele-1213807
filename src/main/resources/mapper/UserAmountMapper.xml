<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiliulou.electricity.mapper.UserAmountMapper">

    <resultMap type="com.xiliulou.electricity.entity.UserAmount" id="AgentAmountMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="uid" column="uid" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="INTEGER"/>
        <result property="totalIncome" column="total_income" jdbcType="NUMERIC"/>
        <result property="balance" column="balance" jdbcType="NUMERIC"/>
        <result property="tenantId" column="tenant_id" jdbcType="INTEGER"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryByAgentId" resultMap="AgentAmountMap">
        select id,
               uid,
               agent_id,
               create_time,
               update_time,
               total_income,
               balance,
               tenant_id,
               del_flag,
               balance
        from t_agent_amount
        where agent_id = #{id} and del_flag = 0
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="AgentAmountMap">
        select id,
               uid,
               agent_id,
               create_time,
               update_time,
               total_income,
               balance,
               tenant_id,
               del_flag
        from t_agent_amount limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="AgentAmountMap">
        select
        id, uid, agent_id, create_time, update_time, total_income, balance, tenant_id, del_flag,withdraw
        from t_agent_amount
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="uid != null">
                and uid = #{uid}
            </if>
            <if test="agentId != null">
                and agent_id = #{agentId}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="totalIncome != null">
                and total_income = #{totalIncome}
            </if>
            <if test="balance != null">
                and balance = #{balance}
            </if>
            <if test="tenantId != null">
                and tenant_id = #{tenantId}
            </if>
            <if test="delFlag != null">
                and del_flag = #{delFlag}
            </if>
        </where>
    </select>

    <select id="accountList" resultType="com.xiliulou.electricity.entity.UserAmount">
        select
        id, uid, agent_id, create_time, update_time, total_income, balance, tenant_id, del_flag,withdraw
        from t_agent_amount
        <where>
            1 = 1
            <if test="agentId != null">
                and agent_id = #{agentId}
            </if>
            <if test="startTime != null">
                and create_time &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                and create_time &lt;= #{endTime}
            </if>
            <if test="tenantId != null">
                and tenant_id = #{tenantId}
            </if>
            and del_flag = 0
            order by create_time desc
            limit #{offset}, #{size}
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insertOne" keyProperty="id" useGeneratedKeys="true">
        insert into t_agent_amount(uid, agent_id, create_time, update_time, total_income, balance, tenant_id, del_flag)
        values (#{uid}, #{agentId}, #{createTime}, #{updateTime}, #{totalIncome}, #{balance}, #{tenantId}, #{delFlag})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update t_agent_amount
        <set>
            <if test="uid != null">
                uid = #{uid},
            </if>
            <if test="agentId != null">
                agent_id = #{agentId},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="totalIncome != null">
                total_income = #{totalIncome},
            </if>
            <if test="balance != null">
                balance = #{balance},
            </if>
            <if test="tenantId != null">
                tenant_id = #{tenantId},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteByAgentId">
        update t_agent_amount set del_flag = 1 , update_time = (unix_timestamp(now()) * 1000)
        where agent_id = #{id}
    </delete>

    <!--通过主键修改数据-->
    <update id="updateIdempontent">
        update t_agent_amount
        <set>
            <if test="fresh.balance != null">
                balance = #{fresh.balance},
            </if>
            <if test="fresh.updateTime != null">
                update_time = #{fresh.updateTime},
            </if>
        </set>
        where id = #{old.id}
        <if test="old.balance != null">
            and balance= #{old.balance}
        </if>
    </update>

	<update id="updateReduceIncome">
        update t_agent_amount
		set balance =balance- #{income},
		withdraw=withdraw+ #{income}
		where uid = #{uid} and del_flag = 0
    </update>

    <update id="updateRollBackIncome">
        update t_agent_amount
		set balance =balance+ #{income},
		withdraw=withdraw- #{income}
		where uid = #{uid} and del_flag = 0
    </update>

</mapper>
