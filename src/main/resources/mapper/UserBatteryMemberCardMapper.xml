<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiliulou.electricity.mapper.UserBatteryMemberCardMapper">

    <resultMap type="com.xiliulou.electricity.entity.UserBatteryMemberCard" id="UserBatteryMemberCardMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="uid" column="uid" jdbcType="INTEGER"/>
        <result property="memberCardId" column="member_card_id" jdbcType="INTEGER"/>
        <result property="memberCardExpireTime" column="member_card_expire_time" jdbcType="INTEGER"/>
        <result property="remainingNumber" column="remaining_number" jdbcType="INTEGER"/>
        <result property="memberCardStatus" column="member_card_status" jdbcType="INTEGER"/>
        <result property="disableMemberCardTime" column="disable_member_card_time" jdbcType="INTEGER"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
        <result property="tenantId" column="tenant_id" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 基础字段 -->
    <sql id="selectUserBatteryMemberCard">
       	select   id, uid, member_card_id, member_card_expire_time, remaining_number, member_card_status, disable_member_card_time, del_flag, create_time, update_time        from t_user_battery_member_card
    </sql>

    <!--查询单个-->
    <select id="selectByUid" resultMap="UserBatteryMemberCardMap">
        <include refid="selectUserBatteryMemberCard"/>
        where uid = #{uid}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="selectByQuery" resultMap="UserBatteryMemberCardMap">
        <include refid="selectUserBatteryMemberCard"/>
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="uid != null">
                and uid = #{uid}
            </if>
            <if test="memberCardId != null">
                and member_card_id = #{memberCardId}
            </if>
            <if test="memberCardExpireTime != null">
                and member_card_expire_time = #{memberCardExpireTime}
            </if>
            <if test="remainingNumber != null">
                and remaining_number = #{remainingNumber}
            </if>
            <if test="memberCardStatus != null">
                and member_card_status = #{memberCardStatus}
            </if>
            <if test="disableMemberCardTime != null">
                and disable_member_card_time = #{disableMemberCardTime}
            </if>
            <if test="delFlag != null">
                and del_flag = #{delFlag}
            </if>
            <if test="tenantId != null">
                and tenant_id = #{tenantId}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insertOne" keyProperty="id" useGeneratedKeys="true">
        insert into t_user_battery_member_card(uid, member_card_id, member_card_expire_time, remaining_number, member_card_status, disable_member_card_time,  del_flag, create_time, update_time)
        values (#{uid}, #{memberCardId}, #{memberCardExpireTime}, #{remainingNumber}, #{memberCardStatus}, #{disableMemberCardTime},  #{delFlag}, #{createTime}, #{updateTime})
    </insert>

    <insert id="insertOrUpdate" keyProperty="id" useGeneratedKeys="true">
        insert into t_user_battery_member_card(uid, member_card_id, member_card_expire_time, remaining_number, member_card_status, disable_member_card_time, del_flag, create_time, update_time)
        values (#{uid}, #{memberCardId}, #{memberCardExpireTime}, #{remainingNumber}, #{memberCardStatus}, #{disableMemberCardTime}, #{delFlag}, #{createTime}, #{updateTime})
        on duplicate key
        update member_card_id=#{memberCardId}, member_card_expire_time=#{memberCardExpireTime}, remaining_number=#{remainingNumber}, member_card_status=#{memberCardStatus}, disable_member_card_time=#{disableMemberCardTime},  del_flag=#{delFlag}, update_time=#{updateTime}
    </insert>

    <!--通过主键修改数据-->
    <update id="updateByUid">
        update t_user_battery_member_card
        <set>
            <if test="uid != null">
                uid = #{uid},
            </if>
            <if test="memberCardId != null">
                member_card_id = #{memberCardId},
            </if>
            <if test="memberCardExpireTime != null">
                member_card_expire_time = #{memberCardExpireTime},
            </if>
            <if test="remainingNumber != null">
                remaining_number = #{remainingNumber},
            </if>
            <if test="memberCardStatus != null">
                member_card_status = #{memberCardStatus},
            </if>
            <if test="disableMemberCardTime != null">
                disable_member_card_time = #{disableMemberCardTime},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
            <if test="tenantId != null">
                tenant_id = #{tenantId},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where uid = #{uid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteByUid">
        delete from t_user_battery_member_card where uid = #{uid}
    </delete>

    <update id="minCount">
        update t_user_battery_member_card set remaining_number=remaining_number-1 where id=#{id} and remaining_number>0 and del_flag=0
    </update>

    <update id="minCountForOffLineEle">
        update t_user_battery_member_card set remaining_number=remaining_number-1 where id=#{id}  and del_flag=0
    </update>

    <update id="plusCount">
        update t_user_battery_member_card set remaining_number=remaining_number+1 where id=#{id} and del_flag=0
    </update>

    <update id="updateByUidForDisableCard">
        update t_user_battery_member_card
        <set>
            <if test="uid != null">
                uid = #{uid},
            </if>
            <if test="memberCardId != null">
                member_card_id = #{memberCardId},
            </if>
            <if test="memberCardExpireTime != null">
                member_card_expire_time = #{memberCardExpireTime},
            </if>
            <if test="remainingNumber != null">
                remaining_number = #{remainingNumber},
            </if>
            <if test="memberCardStatus != null">
                member_card_status = #{memberCardStatus},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            disable_member_card_time = #{disableMemberCardTime}
        </set>
        where uid = #{uid}
    </update>


    <select id="batteryMemberCardExpire" resultType="com.xiliulou.electricity.query.BatteryMemberCardExpiringSoonQuery">
        select  fui.id, temc.card_name, fui.member_card_expire_time, ui.uid, fui.tenant_id, uob.third_id
                from t_user_battery_member_card fui
                left join t_user_info ui on fui.user_info_id = ui.id
                left join t_user_oauth_bind uob on uob.uid = ui.uid
                left join t_electricity_member_card temc on fui.member_card_id=temc.id
                where fui.del_flag = 0
                and fui.member_card_expire_time &gt; #{firstTime}
                and fui.member_card_expire_time &lt;= #{lastTime}
                limit #{offset}, #{size}
    </select>

    <select id="carMemberCardExpire" resultType="com.xiliulou.electricity.query.CarMemberCardExpiringSoonQuery">
        select  fui.id, emc.name as card_name, fui.rent_car_member_card_expire_time, ui.uid, fui.tenant_id, uob.third_id
                from t_franchisee_user_info fui
                left join t_user_info ui on fui.user_info_id = ui.id
                left join t_user_oauth_bind uob on uob.uid = ui.uid
                left join t_electricity_member_card emc on fui.rent_car_card_id = emc.id
                where fui.del_flag = 0
                and fui.rent_car_member_card_expire_time &gt; #{firstTime}
                and fui.rent_car_member_card_expire_time &lt;= #{lastTime}
                limit #{offset}, #{size}
    </select>

    <select id="queryMemberCardExpireUser" resultType="com.xiliulou.electricity.vo.FailureMemberCardVo">
        select tubmc.member_card_expire_time ,tubmc.uid,tubmc.tenant_id,tub.battery_type,tud.battery_deposit
         from t_user_battery_member_card tubmc left join t_user_battery tub on tubmc.uid=tub.uid left join t_user_battery_deposit tud on tubmc.uid=tud.uid
        where tubmc.member_card_expire_time &lt;= #{nowTime}
        limit #{offset},#{size}
    </select>

</mapper>
