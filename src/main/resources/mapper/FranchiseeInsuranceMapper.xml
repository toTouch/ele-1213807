<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiliulou.electricity.mapper.FranchiseeInsuranceMapper">



    <select id="queryCount" resultType="integer">
        SELECT COUNT(1)
        FROM t_franchisee_insurance
        where del_flag=0
        <if test="status != null">
            AND status = #{status}
        </if>
        <if test="insuranceType != null">
            AND insurance_type = #{insuranceType}
        </if>
        <if test="tenantId != null ">
            and tenant_id = #{tenantId}
        </if>
        <if test="franchiseeId != null ">
            and franchisee_id = #{franchiseeId}
        </if>
        <if test="name != null and name!=''">
            and name = #{name}
        </if>
    </select>


    <update id="update">
        update t_franchisee_insurance
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="insuranceType != null">
                insurance_type = #{insuranceType},
            </if>
            <if test="premium != null">
                premium = #{premium},
            </if>
            <if test="forehead != null">
                forehead = #{forehead},
            </if>
            <if test="validDays != null">
                valid_days = #{validDays},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="franchiseeId != null">
                franchisee_id = #{franchiseeId},
            </if>
            <if test="isConstraint != null">
                is_constraint = #{isConstraint},
            </if>
            <if test="batteryType != null and batteryType != ''">
                battery_type = #{batteryType},
            </if>
        </set>
        where id = #{id} and tenant_id = #{tenantId}
    </update>

    <select id="queryList" resultType="com.xiliulou.electricity.vo.FranchiseeInsuranceVo">
        select tf.id,tf.franchisee_id,tf.cid,tf.name,tf.premium,tf.forehead,tf.valid_days,tf.insurance_type,tf.status,tf.is_constraint,tf.del_flag,tf.create_time,tf.update_time,tf.tenant_id
        ,ti.instruction,tf.battery_type,tf.create_time,tf.update_time
        from t_franchisee_insurance tf left join t_insurance_instruction ti on tf.id=ti.insurance_id
        where tf.del_flag=0
        <if test="status != null">
            AND tf.status = #{status}
        </if>
        <if test="insuranceType != null">
            AND tf.insurance_type = #{insuranceType}
        </if>
        <if test="tenantId != null ">
            and tf.tenant_id = #{tenantId}
        </if>
        <if test="franchiseeId != null ">
            and tf.franchisee_id = #{franchiseeId}
        </if>
        ORDER BY tf.create_time DESC
        limit #{offset}, #{size}
    </select>

    <select id="queryByFranchiseeIdAndBatteryType" resultType="com.xiliulou.electricity.entity.FranchiseeInsurance">
        select id,franchisee_id,cid,name,premium,forehead,valid_days,insurance_type,status,is_constraint,del_flag,create_time,update_time,tenant_id,battery_type
        from t_franchisee_insurance
        where del_flag=0 and status=0
        <if test="franchiseeId != null">
            and franchisee_id = #{franchiseeId}
        </if>
        <if test="batteryType != null and batteryType != ''">
            and battery_type = #{batteryType}
        </if>
        <if test="tenantId != null">
            and tenant_id = #{tenantId}
        </if>
    </select>

    <select id="selectByFranchiseeIdAndType" resultType="com.xiliulou.electricity.entity.FranchiseeInsurance">
        select id,franchisee_id,cid,name,premium,forehead,valid_days,insurance_type,status,is_constraint,simple_battery_type
        from t_franchisee_insurance
        where del_flag=0 and status=0
        <if test="franchiseeId != null">
            and franchisee_id = #{franchiseeId}
        </if>
        <if test="simpleBatteryType != null and simpleBatteryType != ''">
            and simple_battery_type = #{simpleBatteryType}
        </if>
        <if test="insuranceType != null">
            and insurance_type = #{insuranceType}
        </if>
        order by id desc limit 1
    </select>

    <select id="checkInsuranceExist" resultType="com.xiliulou.electricity.entity.FranchiseeInsurance">
        SELECT 1 FROM t_franchisee_insurance WHERE del_flag=0
        where del_flag=0 and status=0
        <if test="franchiseeId != null">
            and franchisee_id = #{franchiseeId}
        </if>
        <if test="storeId != null">
            and store_id = #{storeId}
        </if>
        <if test="simpleBatteryType != null and simpleBatteryType != ''">
            and simple_battery_type = #{simpleBatteryType}
        </if>
        <if test="carModelId != null">
            and car_model_id = #{carModelId}
        </if>
        <if test="insuranceType != null">
            and insurance_type = #{insuranceType}
        </if>
    </select>

    <insert id="batchInsert" >
        insert into t_franchisee_insurance(franchisee_id, cid, name, premium, forehead, valid_days, insurance_type, status,is_constraint,del_flag,create_time,update_time,battery_type,tenant_id) values
        <foreach item="item" index="index" collection="list" separator=",">
            (#{item.franchiseeId}, #{item.cid}, #{item.name}, #{item.premium}, #{item.forehead}, #{item.validDays}, #{item.insuranceType}, #{item.status}, #{item.isConstraint}, #{item.delFlag}, #{item.createTime}, #{item.updateTime}, #{item.batteryType}, #{item.tenantId})
        </foreach>
    </insert>

    <select id="queryInsuranceList" resultType="com.xiliulou.electricity.vo.FranchiseeInsuranceVo">
        select tf.id,tf.franchisee_id,tf.cid,tf.name,tf.premium,tf.forehead,tf.valid_days,tf.insurance_type,tf.status,tf.is_constraint,tf.del_flag,tf.create_time,tf.update_time,tf.tenant_id,
        tf.battery_type,tf.create_time,tf.update_time
        from t_franchisee_insurance tf
        where tf.del_flag=0
        <if test="status != null">
            AND tf.status = #{status}
        </if>
        <if test="insuranceType != null">
            AND tf.insurance_type = #{insuranceType}
        </if>
        <if test="tenantId != null ">
            and tf.tenant_id = #{tenantId}
        </if>
        <if test="franchiseeId != null ">
            and tf.franchisee_id = #{franchiseeId}
        </if>
        <choose>
            <when test="batteryType == null or batteryType == ''">
                and tf.battery_type is null
            </when>
            <otherwise>
                and tf.battery_type = #{batteryType}
            </otherwise>
        </choose>
    </select>

    <select id="checkExistInsurance" resultType="Integer">
        select 1 from t_franchisee_insurance
        where franchisee_id=#{franchiseeId}
        <if test="simpleBatteryType != null and simpleBatteryType != ''">
            and simple_battery_type = #{simpleBatteryType}
        </if>
        <if test="carModelId != null">
            and car_model_id = #{carModelId}
        </if>
        LIMIT 1
    </select>
</mapper>
