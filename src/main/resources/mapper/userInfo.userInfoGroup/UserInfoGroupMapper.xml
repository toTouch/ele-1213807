<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiliulou.electricity.mapper.userInfo.userInfoGroup.UserInfoGroupMapper">
    <!-- 基础字段 -->
    <sql id="basic_field">
        id, group_no, name, operator, franchisee_id, tenant_id, del_flag, create_time, update_time
    </sql>
    
    <insert id="insertOne" keyProperty="id" useGeneratedKeys="true">
        insert into t_user_info_group (group_no, name, operator, franchisee_id, tenant_id, create_time, update_time)
        values (#{groupNo}, #{name}, #{operator}, #{franchiseeId}, #{tenantId}, #{createTime}, #{updateTime})
    </insert>
    
    <update id="update">
        update t_user_info_group
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="operator != null">
                operator = #{operator},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
        </set>
        where id = #{id}
    </update>
    
    <update id="batchUpdateByIds">
        update t_user_info_group
        <set>
            <if test="operator != null">
                operator = #{operator},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
        </set>
        <where>
            id in
            <if test="ids != null and ids.size() > 0">
                <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </update>
    
    <select id="selectPage" resultType="com.xiliulou.electricity.bo.userInfoGroup.UserInfoGroupBO">
        select tuig.id as id, tuig.name as groupName, count(distinct (tuigd.uid)) as userCount, tuig.franchisee_id as franchiseeId, tuig.operator as operator, tuig.update_time as
        updateTime, tuig.create_time as createTime
        from t_user_info_group tuig
        left join t_user_info_group_detail tuigd on tuig.group_no = tuigd.group_no
        <where>
            tuig.tenant_id = #{tenantId} and tuig.del_flag = 0
            <if test="groupId != null">
                and tuig.id = #{groupId}
            </if>
            <if test="franchiseeIds != null and franchiseeIds.size()>0">
                and tuig.franchisee_id in
                <foreach collection="franchiseeIds" item="franchiseeId" index="index" open="(" close=")" separator=",">
                    #{franchiseeId}
                </foreach>
            </if>
        </where>
        group by tuig.id
        order by tuig.id desc
        limit #{offset}, #{size}
    </select>
    
    <select id="selectCount" resultType="java.lang.Integer">
        select count(1) from t_user_info_group
        <where>
            tenant_id = #{tenantId} and del_flag = 0
            <if test="groupId != null">
                and id = #{groupId}
            </if>
            <if test="franchiseeIds != null and franchiseeIds.size()>0">
                and franchisee_id in
                <foreach collection="franchiseeIds" item="franchiseeId" index="index" open="(" close=")" separator=",">
                    #{franchiseeId}
                </foreach>
            </if>
        </where>
    </select>
    
    <select id="selectAllGroup" resultType="com.xiliulou.electricity.bo.userInfoGroup.UserInfoGroupIdAndNameBO">
        select id, name, group_no
        from t_user_info_group
        <where>
            tenant_id = #{tenantId} and del_flag = 0
            <if test="groupName != null and groupName != ''">
                and name like concat('%', #{groupName}, '%')
            </if>
            <if test="franchiseeIds != null and franchiseeIds.size()>0">
                and franchisee_id in
                <foreach collection="franchiseeIds" item="franchiseeId" index="index" open="(" close=")" separator=",">
                    #{franchiseeId}
                </foreach>
            </if>
        </where>
        order by id desc
        limit #{offset}, #{size}
    </select>
    
    <select id="queryByName" resultType="com.xiliulou.electricity.entity.userInfo.userInfoGroup.UserInfoGroup">
        select
        <include refid="basic_field"/>
        from t_user_info_group
        where tenant_id = #{tenantId} and name = #{userGroupName} and del_flag = 0
    </select>
    
    <select id="selectById" resultType="com.xiliulou.electricity.entity.userInfo.userInfoGroup.UserInfoGroup">
        select
        <include refid="basic_field"/>
        from t_user_info_group
        where del_flag = 0 and id = #{id}
    </select>
    
    <select id="selectListByIds" resultType="com.xiliulou.electricity.bo.userInfoGroup.UserInfoGroupBO">
        select id as id, name as groupName, franchisee_id as franchiseeId, operator as operator, update_time as updateTime, create_time as createTime
        from t_user_info_group
        <where>
            del_flag = 0
            <if test="ids != null and ids.size()>0">
                and id in
                <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>

</mapper>




