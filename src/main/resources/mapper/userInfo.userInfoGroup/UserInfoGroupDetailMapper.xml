<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiliulou.electricity.mapper.userInfo.userInfoGroup.UserInfoGroupDetailMapper">
    <!-- 基础字段 -->
    <sql id="basic_field">
        id
        , group_no, uid, franchisee_id, tenant_id, del_flag, create_time, update_time
    </sql>
    
    <insert id="batchInsert" keyProperty="id" useGeneratedKeys="true">
        insert into t_user_info_group_detail(group_no, uid, franchisee_id, tenant_id, create_time, update_time)
        values
        <foreach item="item" index="index" collection="detailList" separator=",">
            (#{item.groupNo},#{item.uid},#{item.franchiseeId}, #{item.tenantId}, #{item.createTime}, #{item.updateTime})
        </foreach>
    </insert>
    
    <delete id="deleteByUidAndGroupNoList">
        delete from t_user_info_group_detail where uid = #{uid} and group_no in
        <foreach item="item" index="index" collection="groupNoList" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    
    <select id="selectByUid" resultType="com.xiliulou.electricity.entity.userInfo.userInfoGroup.UserInfoGroupDetail">
        select
        <include refid="basic_field"/>
        from t_user_info_group_detail
        where group_no = #{groupNo} and uid = #{uid} and tenant_id = #{tenantId}
    </select>
    
    <select id="selectPage" resultType="com.xiliulou.electricity.entity.userInfo.userInfoGroup.UserInfoGroupDetail">
        select tuigd.id as id, tuigd.group_no as groupNo, tuigd.uid as uid, tuigd.franchisee_id as franchiseeId, tuigd.tenant_id as tenantId, tuigd.del_flag as delFlag,
        tuigd.create_time as createTime, tuigd.update_time as updateTime
        from t_user_info_group_detail tuigd
        left join t_user_info_group tuig on tuig.group_no = tuigd.group_no
        <where>
            tuigd.tenant_id = #{tenantId}
            <if test="uid != null">
                tuigd.uid = #{uid}
            </if>
            <if test="groupId != null">
                tuig.id = #{groupId}
            </if>
            <if test="franchiseeIds != null and franchiseeIds.size()>0">
                and tuigd.franchisee_id in
                <foreach collection="franchiseeIds" item="franchiseeId" index="index" open="(" close=")" separator=",">
                    #{franchiseeId}
                </foreach>
            </if>
        </where>
        order by tuigd.update_time desc, tuigd.id asc
        limit #{offset}, #{size}
    </select>
    
    <select id="countTotal" resultType="java.lang.Integer">
        select count(1)
        from t_user_info_group_detail tuigd
        left join t_user_info_group tuig on tuig.group_no = tuigd.group_no
        <where>
            tuigd.tenant_id = #{tenantId}
            <if test="uid != null">
                tuigd.uid = #{uid}
            </if>
            <if test="groupId != null">
                tuig.id = #{groupId}
            </if>
            <if test="franchiseeIds != null and franchiseeIds.size()>0">
                and tuigd.franchisee_id in
                <foreach collection="franchiseeIds" item="franchiseeId" index="index" open="(" close=")" separator=",">
                    #{franchiseeId}
                </foreach>
            </if>
        </where>
    </select>
    
    <select id="countUserByGroupId" resultType="java.lang.Integer">
        select count(1)
        from t_user_info_group_detail tuigd
                 left join t_user_info_group tuig on tuig.group_no = tuigd.group_no
        where tuig.id = #{id}
    </select>
    
    <select id="selectListGroupByUid" resultType="com.xiliulou.electricity.vo.userinfo.UserInfoGroupNamesVO">
        select tuigd.uid as uid, tuigd.group_no as groupNo, tuig.id as groupId, tuig.name as groupName
        from t_user_info_group_detail tuigd
        left join t_user_info_group tuig on tuigd.group_no = tuig.group_no
        <where>
            tuig.del_flag = 0 and tuigd.uid = #{uid}
            <if test="tenantId != null">
                and tuigd.id = #{tenantId}
            </if>
            <if test="franchiseeIds != null and franchiseeIds.size()>0">
                and tuigd.franchisee_id in
                <foreach collection="franchiseeIds" item="franchiseeId" index="index" open="(" close=")" separator=",">
                    #{franchiseeId}
                </foreach>
            </if>
        </where>
        order by tuigd.update_time desc, tuigd.id asc
        <if test="offset != null and size!= null">
            limit #{offset}, #{size}
        </if>
    </select>

</mapper>




