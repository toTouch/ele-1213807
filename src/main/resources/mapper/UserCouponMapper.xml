<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiliulou.electricity.mapper.UserCouponMapper">
    
    <sql id="field">
        `id`, `source`, `activity_id`, `coupon_id`, `name`, `discount_type`, `status`, `uid`, `phone`, `deadline`, `order_id`, `del_flag`, `create_time`,
        `update_time`, `tenant_id`, `franchisee_id`, `activity_rule_id`, `source_order_id`
    </sql>

    <!-- 根据来源订单编码作废掉未使用的优惠券 -->
    <update id="cancelBySourceOrderIdAndUnUse">
        UPDATE `t_user_coupon`
        <set>
            `status` = 6, `update_time` = #{optTime}
        </set>
        <where>
            `source_order_id` = #{sourceOrderId} AND `del_flag` = 0
        </where>
    </update>

    <!-- 根据订单编码更新优惠券状态 -->
    <update id="updateStatusByOrderId">
        UPDATE `t_user_coupon`
        <set>
            `status` = #{status}, `update_time` = #{optTime}
            <if test=" status == '1'.toString() "> , `order_id` = '' </if>
        </set>
        <where>
            `order_id` = #{orderId} AND `del_flag` = 0
        </where>
    </update>

    <!-- 查询用户名下有效的优惠券 -->
    <select id="selectEffectiveByUid" resultType="com.xiliulou.electricity.entity.UserCoupon">
        SELECT * FROM `t_user_coupon`
        <where>
            `uid` = #{uid} AND `deadline` <![CDATA[ > ]]> #{deadline} AND `status` = 1 AND `id` IN
            <foreach collection="ids" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </where>
    </select>

    <!--查询指定行数据-->
    <select id="queryList" resultType="com.xiliulou.electricity.vo.UserCouponVO">
        select
        tuc.id as id, tuc.name as name,tuc.verified_uid as  verifiedUid, tuc.uid as uid, tuc.phone as phone, tuc.coupon_id as couponId,
        tuc.deadline as deadline, tuc.order_id as orderId,tuc.create_time as createTime,tc.superposition as superposition,
        tuc.update_time as updateTime, tuc.status as status, tuc.source as source, tuc.del_flag as delFlag, tc.franchisee_id as franchiseeId,
        tuc.discount_type as discountType,tc.amount AS amount,tc.discount AS discount,tc.description, tc.specific_packages,
        tuc.coupon_type as 'couponType',tuc.coupon_way as 'couponWay',tc.count AS 'count', tc.use_scope AS 'useScope'
        from t_user_coupon as tuc
        left join t_coupon as tc on tuc.coupon_id=tc.id
        <where>
            <if test="query.uid != null">
                and tuc.uid = #{query.uid}
            </if>
            <if test="query.phone != null and query.phone != ''">
                and tuc.phone = #{query.phone}
            </if>
            <if test="query.beginTime != null">
                and tuc.create_time &gt;=#{query.beginTime}
            </if>
            <if test="query.endTime != null">
                and tuc.create_time &lt;=#{query.endTime}
            </if>
            <if test="query.orderId != null and query.orderId != ''">
                and tuc.order_id = #{query.orderId}
            </if>
            <if test="query.couponId != null">
                and tuc.coupon_id = #{query.couponId}
            </if>
            <if test="query.status != null">
                and tuc.status = #{query.status}
            </if>
            <if test="query.superposition != null">
                and tc.superposition = #{query.superposition}
            </if>
            <if test="query.discountType != null">
                and tuc.discount_type = #{query.discountType}
            </if>
            <if test="query.statusList!=null and query.statusList!=''">
                and tuc.status in
                <foreach collection="query.statusList" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="query.typeList!=null and query.typeList!=''">
                and tuc.discount_type in
                <foreach collection="query.typeList" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="query.tenantId != null ">
                and tuc.tenant_id = #{query.tenantId}
            </if>
            <if test="query.franchiseeId != null ">
                and tc.franchisee_id = #{query.franchiseeId}
            </if>
            <if test="query.franchiseeIds != null and query.franchiseeIds.size()>0">
                and tc.franchisee_id in
                <foreach collection="query.franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="query.storeIds != null and query.storeIds.size()>0">
                and tc.store_id in
                <foreach collection="query.storeIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="query.couponType != null and query.couponType.size()>0">
                and tuc.coupon_type in
                <foreach collection="query.couponType" item="item" index="index" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="query.couponWay != null ">
                and tuc.coupon_way = #{query.couponWay}
            </if>
        </where>
        ORDER BY tuc.update_time DESC, tuc.id ASC
        <if test="query.offset != null and query.size != null">
            limit #{query.offset}, #{query.size}
        </if>
    </select>


    <select id="queryCount" resultType="java.lang.Integer">
        select count(1)
        from t_user_coupon as tuc
        left join t_coupon as tc on tuc.coupon_id=tc.id
        <where>
            <if test="query.uid != null">
                and tuc.uid = #{query.uid}
            </if>
            <if test="query.phone != null and query.phone != ''">
                and tuc.phone = #{query.phone}
            </if>
            <if test="query.beginTime != null">
                and tuc.create_time &gt;=#{query.beginTime}
            </if>
            <if test="query.endTime != null">
                and tuc.create_time &lt;=#{query.endTime}
            </if>
            <if test="query.orderId != null and query.orderId != ''">
                and tuc.order_id = #{query.orderId}
            </if>
            <if test="query.couponId != null">
                and tuc.coupon_id = #{query.couponId}
            </if>
            <if test="query.discountType != null">
                and tuc.discount_type = #{query.discountType}
            </if>
            <if test="query.status != null">
                and tuc.status = #{query.status}
            </if>
            <if test="query.superposition != null">
                and tc.superposition = #{query.superposition}
            </if>
            <if test="query.statusList!=null and query.statusList!=''">
                and tuc.status in
                <foreach collection="query.statusList" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="query.typeList!=null and query.typeList!=''">
                and tuc.discount_type in
                <foreach collection="query.typeList" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="query.tenantId != null ">
                and tuc.tenant_id = #{query.tenantId}
            </if>
            <if test="query.franchiseeId != null ">
                and tc.franchisee_id = #{query.franchiseeId}
            </if>
            <if test="query.franchiseeIds != null and query.franchiseeIds.size()>0">
                and tc.franchisee_id in
                <foreach collection="query.franchiseeIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="query.storeIds != null and query.storeIds.size()>0">
                and tc.store_id in
                <foreach collection="query.storeIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="query.couponType != null and query.couponType.size()>0">
                and tuc.coupon_type in
                <foreach collection="query.couponType" item="item" index="index" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="query.couponWay != null ">
                and tuc.coupon_way = #{query.couponWay}
            </if>
        </where>
    </select>
    
    <select id="selectListBySourceOrderId" resultType="com.xiliulou.electricity.entity.UserCoupon">
        select <include refid="field"/>
        from t_user_coupon
        where `source_order_id` = #{orderId}
    </select>
    <select id="selectTheVoucherHasBeenCollected" resultType="java.lang.Integer">
        select
            count(1)
        from t_user_coupon
        where activity_id = #{activityId}
          and activity_rule_id = #{activityRuleId}
          and uid = #{uid}
          and del_flag = 0
          and coupon_id in
        <foreach collection="idList" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <update id="update">
        update t_user_coupon
        <set>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="verifiedUid != null">
                verified_uid = #{verifiedUid},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
        </set>
        where id = #{id} and tenant_id = #{tenantId}
    </update>

    <update id="updateStatus">
        update t_user_coupon set
        status = #{status},
        order_id=#{orderId},
        update_time = #{updateTime}
        where id = #{id} and tenant_id = #{tenantId}
    </update>

    <update id="batchUpdateUserCoupon">
        <foreach collection="list" item="item" open="" separator=";" close="">
            update t_user_coupon set
            status = #{item.status},
            order_id=#{item.orderId},
            update_time = #{item.updateTime}
            where id = #{item.id}
        </foreach>
    </update>

    <update id="updateUserCouponStatus">
            update t_user_coupon set  status = #{status}, order_id=#{orderId}, update_time = #{updateTime}  where id = #{id}
    </update>
    
    <update id="updatePhoneByUid">
        update t_user_coupon set phone=#{newPhone} where uid=#{uid} and tenant_id = #{tenantId}
    </update>
    
    <update id="batchUpdateByIds">
        update t_user_coupon set status = #{status}, update_time = #{updateTime}
        where id in
        <foreach collection="idList" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>
    
    <insert id="batchInsert"  keyProperty="id" useGeneratedKeys="true">
        insert into t_user_coupon(uid, phone, coupon_id, deadline, create_time, update_time, status, source, del_flag,
        discount_type, tenant_id, name, verified_uid, franchisee_id,coupon_type, coupon_way)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.uid}, #{item.phone}, #{item.couponId}, #{item.deadline}, #{item.createTime}, #{item.updateTime},
            #{item.status}, #{item.source}, #{item.delFlag}, #{item.discountType}, #{item.tenantId},#{item.name},#{item.verifiedUid}, #{item.franchiseeId}
            ,#{item.couponType},#{item.couponWay})
        </foreach>

    </insert>
    <insert id="batchInsertActivity">
        insert into t_user_coupon(  `id`,
                                    `source`,
                                    `activity_id`,
                                    `coupon_id`,
                                    `name`,
                                    `discount_type`,
                                    `status`,
                                    `uid`,
                                    `phone`,
                                    `deadline`,
                                    `order_id`,
                                    `del_flag`,
                                    `create_time`,
                                    `update_time`,
                                    `tenant_id`,
                                    `franchisee_id`,
                                    `activity_rule_id`,
                                    `source_order_id`,
                                    `verified_uid`,
                                    `coupon_type`,
                                    `coupon_way`)
        values
            <foreach collection="list" item="item" separator=",">
                (#{item.id},
                #{item.source},
                #{item.activityId},
                #{item.couponId},
                #{item.name},
                #{item.discountType},
                #{item.status},
                #{item.uid},
                #{item.phone},
                #{item.deadline},
                #{item.orderId},
                #{item.delFlag},
                #{item.createTime},
                #{item.updateTime},
                #{item.tenantId},
                #{item.franchiseeId},
                #{item.activityRuleId},
                #{item.sourceOrderId},
                #{item.verifiedUid},
                #{item.couponType},
                #{item.couponWay}
                 )
            </foreach>
    </insert>
</mapper>
