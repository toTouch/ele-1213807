<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiliulou.electricity.mapper.UserBatteryDepositMapper">

    <resultMap type="com.xiliulou.electricity.entity.UserBatteryDeposit" id="UserDepositMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="uid" column="uid" jdbcType="INTEGER"/>
        <result property="did" column="did" jdbcType="INTEGER"/>
        <result property="orderId" column="order_id" jdbcType="VARCHAR"/>
        <result property="batteryDeposit" column="battery_deposit" jdbcType="DECIMAL"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
        <result property="tenantId" column="tenant_id" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="INTEGER"/>
        <result property="applyDepositTime" column="apply_deposit_time" jdbcType="INTEGER"/>
        <result property="depositType" column="deposit_type" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 基础字段 -->
    <sql id="selectUserDeposit">
       	select   id, uid, did, order_id, battery_deposit, del_flag, create_time, update_time, apply_deposit_time , deposit_type        from t_user_battery_deposit
    </sql>

    <!--查询单个-->
    <select id="selectByUid" resultMap="UserDepositMap">
        <include refid="selectUserDeposit"/>
        where uid = #{uid} and del_flag = 0
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="selectByQuery" resultMap="UserDepositMap">
        <include refid="selectUserDeposit"/>
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="uid != null">
                and uid = #{uid}
            </if>
            <if test="did != null">
                and did = #{did}
            </if>
            <if test="orderId != null and orderId != ''">
                and order_id = #{orderId}
            </if>
            <if test="delFlag != null">
                and del_flag = #{delFlag}
            </if>
            <if test="tenantId != null">
                and tenant_id = #{tenantId}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insertOne" keyProperty="id" useGeneratedKeys="true">
        insert into t_user_battery_deposit(uid, did, order_id, del_flag,battery_deposit, create_time, update_time, apply_deposit_time, deposit_type)
        values (#{uid}, #{did}, #{orderId}, #{delFlag},#{batteryDeposit}, #{createTime}, #{updateTime},#{applyDepositTime},#{depositType})
    </insert>

    <insert id="insertOrUpdate" keyProperty="id" useGeneratedKeys="true">
        insert into t_user_battery_deposit(uid, did, order_id, del_flag,battery_deposit, create_time, update_time, apply_deposit_time, deposit_type )
        values (#{uid}, #{did}, #{orderId}, #{delFlag},#{batteryDeposit}, #{createTime}, #{updateTime},#{applyDepositTime},#{depositType})
        on duplicate key
        update did=#{did}, order_id=#{orderId}, del_flag=#{delFlag},battery_deposit=#{batteryDeposit}, update_time=#{updateTime}, apply_deposit_time=#{applyDepositTime}, deposit_type=#{depositType}
    </insert>

    <!--通过主键修改数据-->
    <update id="updateByUid">
        update t_user_battery_deposit
        <set>
            <if test="uid != null">
                uid = #{uid},
            </if>
            <if test="did != null">
                did = #{did},
            </if>
            <if test="orderId != null and orderId != ''">
                order_id = #{orderId},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
            <if test="batteryDeposit != null">
                battery_deposit = #{batteryDeposit},
            </if>
            <if test="applyDepositTime != null">
                apply_deposit_time = #{applyDepositTime},
            </if>
            <if test="depositType != null">
                deposit_type = #{depositType},
            </if>
            <if test="tenantId != null">
                tenant_id = #{tenantId},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where uid = #{uid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteByUid">
        delete from t_user_battery_deposit where uid = #{uid}
    </delete>

</mapper>
