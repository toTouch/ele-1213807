<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiliulou.electricity.mapper.enterprise.EnterpriseBatteryPackageMapper">

    <resultMap type="com.xiliulou.electricity.entity.ElectricityMemberCardOrder" id="EnterprisePackageOrderMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="payAmount" column="pay_amount" jdbcType="NUMERIC"/>
        <result property="validDays" column="valid_days" jdbcType="INTEGER"/>
        <result property="uid" column="uid" jdbcType="INTEGER"/>
        <result property="orderId" column="order_id" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="memberCardId" column="member_card_id" jdbcType="INTEGER"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="memberCardType" column="member_card_type" jdbcType="INTEGER"/>
        <result property="maxUseCount" column="max_use_count" jdbcType="INTEGER"/>
        <result property="cardName" column="card_name" jdbcType="VARCHAR"/>
        <result property="franchiseeId" column="franchisee_id" jdbcType="INTEGER"/>
        <result property="tenantId" column="tenant_id" jdbcType="INTEGER"/>
        <result property="isBindActivity" column="is_bind_activity" jdbcType="INTEGER"/>
        <result property="activityId" column="activity_id" jdbcType="INTEGER"/>
        <!--<result property="maxUseDistance" column="max_use_distance" jdbcType="INTEGER"/>-->
        <result property="memberCardModel" column="member_card_model" jdbcType="INTEGER"/>
        <result property="payType" column="pay_type" jdbcType="INTEGER"/>
        <result property="payCount" column="pay_count" jdbcType="INTEGER"/>
        <!--<result property="eid" column="eid" jdbcType="INTEGER"/>-->
        <!--<result property="couponId" column="coupon_id" jdbcType="INTEGER"/>-->
        <result property="source" column="source" jdbcType="INTEGER"/>
        <result property="refId" column="ref_id" jdbcType="INTEGER"/>
        <result property="storeId" column="store_id" jdbcType="INTEGER"/>
        <result property="useStatus" column="use_status" jdbcType="INTEGER"/>
        <result property="sendCouponId" column="send_coupon_id" jdbcType="INTEGER"/>
        <result property="refundStatus" column="refund_status" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 基础字段 -->
    <sql id="selectEnterprisePackageOrder">
        select id,
               pay_amount,
               valid_days,
               uid,
               order_id,
               status,
               member_card_id,
               user_name,
               member_card_type,
               max_use_count,
               card_name,
               franchisee_id,
               tenant_id,
               is_bind_activity,
               activity_id,
               max_use_distance,
               member_card_model,
               pay_type,
               pay_count,
               eid,
               coupon_id,
               source,
               ref_id,
               store_id,
               use_status,
               send_coupon_id,
               refund_status,
               create_time,
               update_time
        from t_electricity_member_card_order
    </sql>

    <!--新增所有列-->
    <insert id="insertMemberCardOrder" keyProperty="id" useGeneratedKeys="true">
        insert into t_electricity_member_card_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            pay_amount,
            valid_days,
            uid,
            order_id,
            status,
            member_card_id,
            user_name,
            member_card_type,
            max_use_count,
            card_name,
            franchisee_id,
            tenant_id,
            is_bind_activity,
            activity_id,

            member_card_model,
            pay_type,
            pay_count,

            source,
            ref_id,
            store_id,
            use_status,
            send_coupon_id,
            refund_status,
            create_time,
            update_time
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{payAmount},
            #{validDays},
            #{uid},
            #{orderId},
            #{status},
            #{memberCardId},
            #{userName},
            #{memberCardType},
            #{maxUseCount},
            #{cardName},
            #{franchiseeId},
            #{tenantId},
            #{isBindActivity},
            #{activityId},
            #{memberCardModel},
            #{payType},
            #{payCount},
            #{source},
            #{refId},
            #{storeId},
            #{useStatus},
            #{sendCouponId},
            #{refundStatus},
            #{createTime},
            #{updateTime}
        </trim>

    </insert>

    <select id="queryBatteryPackageOrder" resultType="com.xiliulou.electricity.vo.enterprise.EnterprisePackageOrderVO">
          select
                temco.id,
                temco.pay_amount as payAmount,
                temco.status,
                temco.member_card_id as packageId,
                temco.card_name as packageName,
                temco.order_id as orderNo,
                temco.uid,
                tui.name,
                tui.phone,
                temco.use_status,
                temco.create_time,
                temco.update_time
          from t_electricity_member_card_order temco
          left join t_user_info tui on tui.uid = temco.uid

        <where>
            temco.order_type = 1 and temco.del_flag = 0 and temco.status = 1
            <if test="uid != null">
                and temco.uid = #{uid}
            </if>

            <if test="enterpriseId != null">
                and temco.enterprise_id = #{enterpriseId}
            </if>

            <if test="beginTime != null">
                and temco.create_time &gt;= #{beginTime}
            </if>
            <if test="endTime != null">
                and temco.create_time &lt;= #{endTime}
            </if>
            order by temco.create_time desc
        </where>
    </select>
    
    <!--查询租/还电池订单记录-->
    <select id="queryRentBatteryOrder" resultType="com.xiliulou.electricity.vo.enterprise.EnterpriseRentBatteryOrderVO">
        select
            trbo.id,
            trbo.order_id as orderNo,
            trbo.uid,
            tui.name,
            tui.phone,
            trbo.electricity_battery_sn,
            trbo.battery_deposit,
            trbo.electricity_cabinet_id,
            trbo.cell_no,
            trbo.type,
            trbo.status,
            trbo.create_time,
            trbo.update_time
        from t_rent_battery_order trbo
        left join t_user_info tui on tui.uid = trbo.uid
        
        <where>
            trbo.del_flag = 0
            <if test="uid != null">
                and trbo.uid = #{uid}
            </if>
            
            <if test="beginTime != null">
                and trbo.create_time &gt;= #{beginTime}
            </if>
            <if test="endTime != null">
                and trbo.create_time &lt;= #{endTime}
            </if>
            order by trbo.create_time desc
        </where>
    </select>
    
    <!--查询冻结套餐订单信息-->
    <select id="queryBatteryFreezeOrder" resultType="com.xiliulou.electricity.vo.enterprise.EnterpriseFreezePackageRecordVO">
        select
            dmcr.id,
            dmcr.member_card_name as packageName,
            dmcr.status ,
            dmcr.uid,
            dmcr.user_name,
            dmcr.phone,
            dmcr.create_time,
            dmcr.update_time,
            dmcr.tenant_id,
            dmcr.err_msg,
            dmcr.battery_member_card_id as packageId,
            dmcr.disable_member_card_no as packageFreezeOrderNo,
            dmcr.card_days,
            dmcr.choose_days ,
            dmcr.real_days ,
            dmcr.pay_status,
            dmcr.charge_rate,
            dmcr.disable_card_time_type ,
            dmcr.apply_reason,
            dmcr.disable_member_card_time as freezePackageTime,
            emcr.enable_time as enablePackageTime
        from  t_ele_disable_member_card_record  dmcr
        left join t_enable_member_card_record emcr on dmcr.disable_member_card_no=emcr.disable_member_card_no
    
        <where>
            dmcr.del_flag = 0 and dmcr.status = 1
            <if test="uid != null">
                and dmcr.uid = #{uid}
            </if>
        
            <if test="beginTime != null">
                and dmcr.create_time &gt;= #{beginTime}
            </if>
            <if test="endTime != null">
                and dmcr.create_time &lt;= #{endTime}
            </if>
            order by dmcr.create_time desc
        </where>

    </select>
    
    <!--查询退押的订单信息-->
    <select id="queryBatteryDepositOrder" resultType="com.xiliulou.electricity.vo.enterprise.EnterpriseFreezePackageRecordVO">
        select
            tero.id as id,
            tero.refund_order_no as refundOrderNo,
            tero.order_id as orderId,
            tero.pay_amount as payAmount,
            tero.refund_amount as refundAmount,
            tero.status as status,
            tero.err_msg as errMsg,
            tero.create_time as createTime,
            tero.update_time as updateTime ,
            tero.member_card_owe_number as memberCardOweNumber,
            tedo.uid as uid,
            tedo.name as name,
            tedo.phone as phone,
            tero.refund_order_type as refundOrderType,
            tedo.pay_type as payType,
            tedo.mid as packageId
        from t_ele_refund_order as tero
        left join t_ele_deposit_order as tedo on tero.order_id= tedo.order_id
        <where>
            tero.del_flag = 0 and tero.status = 4
            <if test="uid != null">
                and tero.uid = #{uid}
            </if>
        
            <if test="beginTime != null">
                and tero.create_time &gt;= #{beginTime}
            </if>
            <if test="endTime != null">
                and tero.create_time &lt;= #{endTime}
            </if>
            order by tero.create_time desc
        </where>
    
    </select>
    

</mapper>